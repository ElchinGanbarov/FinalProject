#pragma checksum "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Pages_Chat1), @"mvc.1.0.view", @"/Views/Pages/Chat1.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\User\Desktop\FinalProject\Messenger\Views\_ViewImports.cshtml"
using Messenger;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\User\Desktop\FinalProject\Messenger\Views\_ViewImports.cshtml"
using Messenger.Models.General;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\User\Desktop\FinalProject\Messenger\Views\_ViewImports.cshtml"
using Messenger.Models.Account;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\User\Desktop\FinalProject\Messenger\Views\_ViewImports.cshtml"
using Messenger.Models.AccountPrivacySecurity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\User\Desktop\FinalProject\Messenger\Views\_ViewImports.cshtml"
using Messenger.Models.Friend;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\User\Desktop\FinalProject\Messenger\Views\_ViewImports.cshtml"
using Repository.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\User\Desktop\FinalProject\Messenger\Views\_ViewImports.cshtml"
using Repository.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1", @"/Views/Pages/Chat1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5e2294ef8717b546cc550f87ac9013c75924594b", @"/Views/_ViewImports.cshtml")]
    public class Views_Pages_Chat1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<GeneralViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("d-none d-xl-block bg-light rounded p-1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "quickymessanger", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/avatar/2.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("contacts-link"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "pages", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "chat1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "chat2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/avatar/3.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/avatar/4.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/avatar/5.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/avatar/6.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/avatar/7.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/avatar/8.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/uploads/default-profile-img.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-outline-default mx-1 logout"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "account", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "logout", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("ml-3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("cursor:pointer"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("d-none"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("accept", new global::Microsoft.AspNetCore.Html.HtmlString("image/*"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("dropdown-item profile-img-remove text-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "accountdetail", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "removephoto", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_30 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-fluid rounded"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_31 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/shared-photos/01.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_32 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("popup-media"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_33 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/shared-photos/01.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_34 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/shared-photos/02.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_35 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/shared-photos/02.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_36 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/shared-photos/03.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_37 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/shared-photos/03.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_38 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-fluid rounded border"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_39 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-img call-list-user-photo"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_40 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-img selected-account-details-img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_41 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-md onchange"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_42 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Type your first name"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_43 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_44 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Type your last name"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_45 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Type your mobile number"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_46 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "date", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_47 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("min", new global::Microsoft.AspNetCore.Html.HtmlString("1930-01-01"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_48 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("max", new global::Microsoft.AspNetCore.Html.HtmlString("2010-01-01"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_49 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-md onchangess"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_50 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("dd/mm/yyyy"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_51 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Type your email address"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_52 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Type your website"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_53 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Type your address"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_54 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("accountchange"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_55 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "update", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_56 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-md onchanges"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_57 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Username"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_58 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-danger "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_59 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("sociallink"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_60 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "updatesocialLink", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_61 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-md chpassword"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_62 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Current password"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_63 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-danger currentpassworderror "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_64 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-md "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_65 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("New password"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_66 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Repeat password"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_67 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("bir"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_68 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "updatepassword", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_69 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("update-account-privacy"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_70 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "updateprivacy", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_71 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("update-account-security"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_72 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "updatesecurity", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_73 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline w-100 p-2 border-bottom"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_74 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("~/uploads/default-profile-img.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_75 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline w-100 px-2 pb-2 border-bottom"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_76 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/media/avatar/1.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_77 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/jquery/jquery-3.5.0.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_78 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/bootstrap/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_79 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/magnific-popup/jquery.magnific-popup.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_80 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/svg-inject/svg-inject.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_81 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/modal-stepes/modal-steps.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_82 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery-toast-plugin/jquery.toast.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_83 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/app.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_84 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery-validation/dist/jquery.validate.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_85 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_86 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery-confirm/jquery-confirm.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_87 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqueryui/jquery-ui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_88 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/limonte-sweetalert2/sweetalert2.all.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_89 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signalr/dist/browser/signalr.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_90 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/main.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_91 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("chats-tab-open"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
  
 Account account = ViewBag.User as Account;
 

#line default
#line hidden
#nullable disable
            WriteLiteral("    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca137933", async() => {
                WriteLiteral("\r\n\r\n        <!-- Main Layout Start -->\r\n        <div class=\"main-layout\">\r\n            <!-- Navigation Start -->\r\n            <div class=\"navigation navbar navbar-light bg-primary\">\r\n                <!-- Logo Start -->\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca138442", async() => {
                    WriteLiteral(@"
                    <svg height=""30"" width=""30"" viewBox=""0 0 512 511""><g><path d=""m120.65625 512.476562c-7.25 0-14.445312-2.023437-20.761719-6.007812-10.929687-6.902344-17.703125-18.734375-18.117187-31.660156l-1.261719-41.390625c-51.90625-46.542969-80.515625-111.890625-80.515625-183.992188 0-68.816406 26.378906-132.101562 74.269531-178.199219 47.390625-45.609374 111.929688-70.726562 181.730469-70.726562s134.339844 25.117188 181.730469 70.726562c47.890625 46.097657 74.269531 109.382813 74.269531 178.199219 0 68.8125-26.378906 132.097657-74.269531 178.195313-47.390625 45.609375-111.929688 70.730468-181.730469 70.730468-25.164062 0-49.789062-3.253906-73.195312-9.667968l-46.464844 20.5c-5.035156 2.207031-10.371094 3.292968-15.683594 3.292968zm135.34375-471.976562c-123.140625 0-216 89.816406-216 208.925781 0 60.667969 23.957031 115.511719 67.457031 154.425781 8.023438 7.226563 12.628907 17.015626 13.015625 27.609376l.003906.125 1.234376 40.332031 45.300781-19.988281c8.15625-3.589844 17.355469-4.28125 25.921875-1");
                    WriteLiteral(@".945313 20.132812 5.554687 41.332031 8.363281 63.066406 8.363281 123.140625 0 216-89.816406 216-208.921875 0-119.109375-92.859375-208.925781-216-208.925781zm-125.863281 290.628906 74.746093-57.628906c5.050782-3.789062 12.003907-3.839844 17.101563-.046875l55.308594 42.992187c16.578125 12.371094 40.304687 8.007813 51.355469-9.433593l69.519531-110.242188c6.714843-10.523437-6.335938-22.417969-16.292969-14.882812l-74.710938 56.613281c-5.050781 3.792969-12.003906 3.839844-17.101562.046875l-55.308594-41.988281c-16.578125-12.371094-40.304687-8.011719-51.355468 9.429687l-69.554688 110.253907c-6.714844 10.523437 6.335938 22.421874 16.292969 14.886718zm0 0"" data-original=""#000000"" class=""active-path"" data-old_color=""#000000"" fill=""#665dfe"" /></g> </svg>
                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                <!-- Logo End -->
                <!-- Main Nav Start -->
                <ul class=""nav nav-minimal flex-row flex-grow-1 justify-content-between flex-xl-column justify-content-xl-center"" id=""mainNavTab"" role=""tablist"">

                    <!-- Chats Tab Start -->
                    <li class=""nav-item"">
                        <a class=""nav-link p-0 py-xl-3 active"" id=""chats-tab"" href=""#chats-content"" title=""Chats"">
                            <!-- Default :: Inline SVG -->
                            <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z"" />
                            </svg>

                            <!-- Alternate :: External File link -->
                            <!-- <img");
                WriteLiteral(@" class=""injectable hw-24"" src=""./~/media/heroicons/outline/chat-alt-2.svg"" alt=""Chat icon""> -->
                        </a>
                    </li>
                    <!-- Chats Tab End -->
                    <!-- Calls Tab Start -->
                    <li class=""nav-item"">
                        <a class=""nav-link p-0 py-xl-3 "" id=""calls-tab"" href=""#calls-content"" title=""Calls"">
                            <!-- Default :: Inline SVG -->
                            <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"" />
                            </svg>

                            <!-- Alternate :: External File link -->
                            <!--");
                WriteLiteral(@" <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/phone.svg"" alt=""Phone icon""> -->
                        </a>
                    </li>
                    <!-- Calls Tab End -->
                    <!-- Friends Tab Start -->
                    <li class=""nav-item"">
                        <a class=""nav-link p-0 py-xl-3"" id=""friends-tab"" href=""#friends-content"" title=""Friends"">
                            <!-- Default :: Inline SVG -->
                            <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"" />
                            </svg>

                            <!-- Alternate :: External File link -->
                            <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/users.svg"" alt=""Friends icon""> -");
                WriteLiteral(@"->
                        </a>
                    </li>
                    <!-- Friends Tab End -->
                    <!-- Profile Tab Start -->
                    <li class=""nav-item"">
                        <a class=""nav-link p-0 py-xl-3"" id=""profile-tab"" href=""#profile-content"" title=""Profile"">
                            <!-- Default :: Inline SVG -->
                            <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z"" />
                            </svg>

                            <!-- Alternate :: External File link -->
                            <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/user-circle.svg"" alt=""Profile icon""> -->
                        </a>
                    </li>
     ");
                WriteLiteral(@"               <!-- Profile Tab End -->
                </ul>
                <!-- Main Nav End -->
            </div>
            <!-- Navigation End -->
            <!-- Sidebar Start -->
            <aside class=""sidebar"">
                <!-- Tab Content Start -->
                <div class=""tab-content"">
                    <!-- Chat Tab Content Start -->
                    <div class=""tab-pane active"" id=""chats-content"">
                        <div class=""d-flex flex-column h-100"">
                            <div class=""hide-scrollbar h-100"" id=""chatContactsList"">

                                <!-- Chat Header Start -->
                                <div class=""sidebar-header sticky-top p-2"">

                                    <div class=""d-flex justify-content-between align-items-center"">
                                        <!-- Chat Tab Pane Title Start -->
                                        <h5 class=""font-weight-semibold mb-0"">Chats</h5>
                       ");
                WriteLiteral(@"                 <!-- Chat Tab Pane Title End -->

                                        <ul class=""nav flex-nowrap"">

                                            <li class=""nav-item list-inline-item mr-1"">
                                                <a class=""nav-link text-muted px-1"" href=""#"" title=""Notifications"" role=""button"" data-toggle=""modal"" data-target=""#notificationModal"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"" />
                                                    </svg>

                             ");
                WriteLiteral(@"                       <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/bell.svg"" alt=""""> -->
                                                </a>
                                            </li>

                                            <li class=""nav-item list-inline-item mr-0"">
                                                <div class=""dropdown"">
                                                    <a class=""nav-link text-muted px-1"" href=""#"" role=""button"" title=""Details"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M");
                WriteLiteral(@"12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img  class=""injectable hw-20"" src=""./~/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                                    </a>

                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                        <a class=""dropdown-item"" href=""#"" role=""button"" data-toggle=""modal"" data-target=""#startConversation"">New Chat</a>
                                                        <a class=""dropdown-item"" href=""#"" role=""button"" data-toggle=""modal"" data-target=""#createGroup"">Create Group</a>
                                                        <a class=""dropdown-item""");
                WriteLiteral(@" href=""#"" role=""button"" data-toggle=""modal"" data-target=""#inviteOthers"">Invite Others</a>
                                                    </div>
                                                </div>
                                            </li>
                                        </ul>
                                    </div>


                                    <!-- Sidebar Header Start -->
                                    <div class=""sidebar-sub-header"">
                                        <!-- Sidebar Header Dropdown Start -->
                                        <div class=""dropdown mr-2"">
                                            <!-- Dropdown Button Start -->
                                            <button class=""btn btn-outline-default dropdown-toggle"" type=""button"" data-chat-filter-list="""" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                All Chats
                                           ");
                WriteLiteral(@" </button>
                                            <!-- Dropdown Button End -->
                                            <!-- Dropdown Menu Start -->
                                            <div class=""dropdown-menu"">
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""all-chats"" href=""#"">test</a>
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""friends"" href=""#"">Friends</a>
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""groups"" href=""#"">Groups</a>
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""unread"" href=""#"">Unread</a>
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""archived"" href=""#"">Archived</a>
                                            </div>
                                            <!-- Dropdown");
                WriteLiteral(" Menu End -->\r\n                                        </div>\r\n                                        <!-- Sidebar Header Dropdown End -->\r\n                                        <!-- Sidebar Search Start -->\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca152986", async() => {
                    WriteLiteral(@"
                                            <div class=""input-group"">
                                                <input type=""text"" class=""form-control search border-right-0 transparent-bg pr-0"" placeholder=""Search users..."">
                                                <div class=""input-group-append"">
                                                    <div class=""input-group-text transparent-bg border-left-0"" role=""button"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
    ");
                    WriteLiteral(@"                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/search.svg"" alt=""""> -->
                                                    </div>
                                                </div>
                                            </div>
                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                        <!-- Sidebar Search End -->
                                    </div>
                                    <!-- Sidebar Header End -->
                                </div>
                                <!-- Chat Header End -->
                                <!-- Chat Contact List Start -->
                                <ul class=""contacts-list"" id=""chatContactTab"" data-chat-list="""">
                                    <!-- Chat Item Start -->
                                    <li class=""contacts-item friends active"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca156447", async() => {
                    WriteLiteral("\r\n                                            <div class=\"avatar avatar-online\">\r\n                                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca156843", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                            </div>
                                            <div class=""contacts-content"">
                                                <div class=""contacts-info"">
                                                    <h6 class=""chat-name text-truncate"">Catherine Richardson</h6>
                                                    <div class=""chat-time"">Just now</div>
                                                </div>
                                                <div class=""contacts-texts"">
                                                    <p class=""text-truncate"">I’m sorry, I didn’t catch that. Could you please repeat?</p>
                                                </div>
                                            </div>
                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </li>
                                    <!-- Chat Item End -->
                                    <!-- Chat Item Start -->
                                    <li class=""contacts-item groups"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca160453", async() => {
                    WriteLiteral(@"
                                            <div class=""avatar bg-success text-light"">
                                                <span>
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable"" src=""./~/media/heroicons/outline/");
                    WriteLiteral(@"user-group.svg"" alt=""""> -->
                                                </span>
                                            </div>
                                            <div class=""contacts-content"">
                                                <div class=""contacts-info"">
                                                    <h6 class=""chat-name"">Themeforest Group</h6>
                                                    <div class=""chat-time""><span>10:20 pm</span></div>
                                                </div>
                                                <div class=""contacts-texts"">
                                                    <p class=""text-truncate""><span>Jeny: </span>That’s pretty common. I heard that a lot of people had the same experience.</p>
                                                    <div class=""d-inline-flex align-items-center ml-1"">
                                                        <!-- Default :: Inline SVG -->
                           ");
                    WriteLiteral(@"                             <svg class=""hw-16 text-muted"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                            <path fill-rule=""evenodd"" d=""M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"" clip-rule=""evenodd"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-16 text-muted"" src=""./~/media/heroicons/solid/lock-closed.svg"" alt=""""> -->
                                                    </div>
                                                </div>
                                            </div>
                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </li>
                                    <!-- Chat Item End -->
                                    <!-- Chat Item Start -->
                                    <li class=""contacts-item friends unread"">
                                        <a class=""contacts-link"" href=""#"">
                                            <div class=""avatar avatar-offline bg-info text-light"">
                                                <span>EW</span>
                                            </div>
                                            <div class=""contacts-content"">
                                                <div class=""contacts-info"">
                                                    <h6 class=""chat-name"">Eva Walker</h6>
                                                    <div class=""chat-time"">09:36 am</div>
                                                </div>
                                                <div class=""contacts-texts"">
                ");
                WriteLiteral(@"                                    <p class=""text-truncate"">You’re kidding! I drive a motorcycle as well. What type of bike do you have?</p>
                                                    <div class=""badge badge-rounded badge-primary ml-1"">2</div>
                                                </div>
                                            </div>
                                        </a>
                                    </li>
                                    <!-- Chat Item End -->
                                    <!-- Chat Item Start -->
                                    <li class=""contacts-item friends"">
                                        <a class=""contacts-link"" href=""#"">
                                            <div class=""avatar avatar-busy"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca166892", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <div class=""contacts-content"">
                                                <div class=""contacts-info"">
                                                    <h6 class=""chat-name"">Christopher Garcia</h6>
                                                    <div class=""chat-time""><span>Yesterday</span></div>
                                                </div>
                                                <div class=""contacts-texts"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-20 text-muted"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                        <path fill-rule=""evenodd"" d=""M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z"" clip-rule=""evenodd"" />
                                                    </svg>

                                                    <!");
                WriteLiteral(@"-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-20 text-muted"" src=""./~/media/heroicons/solid/photograph.svg"" alt=""""> -->
                                                    <p class=""text-truncate"">Photo</p>
                                                </div>
                                            </div>
                                        </a>
                                    </li>
                                    <!-- Chat Item End -->
                                    <!-- Chat Item Start -->
                                    <li class=""contacts-item unread"">
                                        <a class=""contacts-link"" href=""#"">
                                            <div class=""avatar avatar-online"">
                                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca170043", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                            </div>
                                            <div class=""contacts-content"">
                                                <div class=""contacts-info"">
                                                    <h6 class=""chat-name"">Christina Turner</h6>
                                                    <div class=""chat-time"">
                                                        <span>31/05/20</span>
                                                    </div>
                                                </div>
                                                <div class=""contacts-texts"">
                                                    <p class=""text-truncate"">I’m working hard in Maths, Physics and Chemistry. I have planning to appear in I.I.T. after XII.</p>
                                                    <div class=""badge badge-rounded badge-primary ml-1"">10</div>
                                                </div>
                     ");
                WriteLiteral(@"                       </div>
                                        </a>
                                    </li>
                                    <!-- Chat Item End -->
                                    <!-- Chat Item Start -->
                                    <li class=""contacts-item friends"">
                                        <a class=""contacts-link"" href=""#"">
                                            <div class=""avatar avatar-offline"">
                                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca172817", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                            </div>
                                            <div class=""contacts-content"">
                                                <div class=""contacts-info"">
                                                    <h6 class=""chat-name"">Tammy Martinez</h6>
                                                    <div class=""chat-time"">
                                                        <span>24/04/20</span>
                                                    </div>
                                                </div>
                                                <div class=""contacts-texts"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-20 text-muted"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                        <path fill-rule=""evenodd"" d=""M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A");
                WriteLiteral(@"2 2 0 0010.586 2H6zm2 10a1 1 0 10-2 0v3a1 1 0 102 0v-3zm2-3a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm4-1a1 1 0 10-2 0v7a1 1 0 102 0V8z"" clip-rule=""evenodd"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-20 text-muted"" src=""./~/media/heroicons/solid/document-report.svg"" alt=""""> -->
                                                    <p class=""text-truncate"">project_guidelines.docs</p>
                                                </div>
                                            </div>
                                        </a>
                                    </li>
                                    <!-- Chat Item End -->
                                    <!-- Chat Item Start -->
                                    <li class=""contacts-item friends"">
                                        <a cla");
                WriteLiteral("ss=\"contacts-link\" href=\"#\">\r\n                                            <div class=\"avatar avatar-online\">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca176257", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <div class=""contacts-content"">
                                                <div class=""contacts-info"">
                                                    <h6 class=""chat-name"">Bonnie Torres</h6>
                                                    <div class=""chat-time""><span>20/04/20</span></div>
                                                </div>
                                                <div class=""contacts-texts"">
                                                    <p class=""text-truncate"">Catch you later! Bye-bye!</p>
                                                    <div class=""d-inline-flex align-items-center ml-1"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-16 text-muted"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                            <path fill-rule=""evenodd"" d=""M9.383 3.076A");
                WriteLiteral(@"1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM12.293 7.293a1 1 0 011.414 0L15 8.586l1.293-1.293a1 1 0 111.414 1.414L16.414 10l1.293 1.293a1 1 0 01-1.414 1.414L15 11.414l-1.293 1.293a1 1 0 01-1.414-1.414L13.586 10l-1.293-1.293a1 1 0 010-1.414z"" clip-rule=""evenodd"" />
                                                        </svg>
                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-16 text-muted"" src=""./~/media/heroicons/solid/volume-off.svg"" alt=""""> -->
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </li>
                                    <!-- Chat Item End -->
                                    <!-- Chat Item ");
                WriteLiteral("Start -->\r\n                                    <li class=\"contacts-item friends\">\r\n                                        <a class=\"contacts-link\" href=\"#\">\r\n                                            <div class=\"avatar avatar-offline\">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca179833", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <div class=""contacts-content"">
                                                <div class=""contacts-info"">
                                                    <h6 class=""chat-name"">Jacqueline James</h6>
                                                    <div class=""chat-time""><span>15/02/20</span></div>
                                                </div>
                                                <div class=""contacts-texts"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-16 text-muted"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                        <path d=""M14.414 7l3.293-3.293a1 1 0 00-1.414-1.414L13 5.586V4a1 1 0 10-2 0v4.003a.996.996 0 00.617.921A.997.997 0 0012 9h4a1 1 0 100-2h-1.586z"" />
                                                        <path d=""M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a");
                WriteLiteral(@"1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-16 text-muted"" src=""./~/media/heroicons/solid/phone-incoming.svg"" alt=""""> -->
                                                    <p class=""text-truncate"">Missed call</p>
                                                </div>
                                            </div>
                                        </a>
                                    </li>
                                    <!-- Chat Item End -->
                                    <!-- Chat Item Start -->
                                    <li class=""contacts-item archived"">
                                        <a class=""contacts-");
                WriteLiteral("link\" href=\"#\">\r\n                                            <div class=\"avatar avatar-away\">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca183256", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <div class=""contacts-content"">
                                                <div class=""contacts-info"">
                                                    <h6 class=""chat-name"">Annie Richardson</h6>
                                                    <div class=""chat-time""><span>26/12/19</span></div>
                                                </div>
                                                <div class=""contacts-texts"">
                                                    <p class=""text-truncate"">I think I have everything I need, thank you!</p>
                                                </div>
                                            </div>
                                        </a>
                                    </li>
                                    <!-- Chat Item End -->
                                </ul>
                                <!-- Chat Contact List End -->
                            </div>
     ");
                WriteLiteral(@"                   </div>
                    </div>
                    <!-- Chats Tab Content End -->
                    <!-- Calls Tab Content Start -->
                    <div class=""tab-pane"" id=""calls-content"">
                        <div class=""d-flex flex-column h-100"">
                            <div class=""hide-scrollbar h-100"" id=""callContactsList"">
                                <!-- Chat Header Start -->
                                <div class=""sidebar-header sticky-top p-2"">

                                    <div class=""d-flex justify-content-between align-items-center"">
                                        <!-- Chat Tab Pane Title Start -->
                                        <h5 class=""font-weight-semibold mb-0"">Calls</h5>
                                        <!-- Chat Tab Pane Title End -->

                                        <ul class=""nav flex-nowrap"">

                                            <li class=""nav-item list-inline-item mr-1"">
       ");
                WriteLiteral(@"                                         <a class=""nav-link text-muted px-1"" href=""#"" title=""Notifications"" role=""button"" data-toggle=""modal"" data-target=""#notificationModal"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img src=""./~/media/heroicons/outline/bell.svg"" alt="""" class=""injectable hw-20""> -->
             ");
                WriteLiteral(@"                                   </a>
                                            </li>

                                            <li class=""nav-item list-inline-item mr-0"">
                                                <div class=""dropdown"">
                                                    <a class=""nav-link text-muted px-1"" href=""#"" role=""button"" title=""Details"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                        </svg>

                                 ");
                WriteLiteral(@"                       <!-- Alternate :: External File link -->
                                                        <!-- <img src=""./~/media/heroicons/outline/dots-vertical.svg"" alt="""" class=""injectable hw-20""> -->
                                                    </a>

                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                        <a class=""dropdown-item"" href=""#"" role=""button"" data-toggle=""modal"" data-target=""#startConversation"">New Chat</a>
                                                        <a class=""dropdown-item"" href=""#"" role=""button"" data-toggle=""modal"" data-target=""#createGroup"">Create Group</a>
                                                        <a class=""dropdown-item"" href=""#"" role=""button"" data-toggle=""modal"" data-target=""#inviteOthers"">Invite Others</a>
                                                    </div>
                                                </div>
               ");
                WriteLiteral(@"                             </li>
                                        </ul>
                                    </div>


                                    <!-- Sidebar Header Start -->
                                    <div class=""sidebar-sub-header"">
                                        <!-- Sidebar Header Dropdown Start -->
                                        <div class=""dropdown mr-2"">
                                            <!-- Dropdown Button Start -->
                                            <button class=""btn btn-outline-default dropdown-toggle"" type=""button"" data-chat-filter-list="""" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                All Chats Calls
                                            </button>
                                            <!-- Dropdown Button End -->
                                            <!-- Dropdown Menu Start -->
                                            <div class=""");
                WriteLiteral(@"dropdown-menu"">
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""all-chats"" href=""#"">All Chats okk</a>
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""friends"" href=""#"">Friends</a>
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""groups"" href=""#"">Groups</a>
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""unread"" href=""#"">Unread</a>
                                                <a class=""dropdown-item"" data-chat-filter="""" data-select=""archived"" href=""#"">Archived</a>
                                            </div>
                                            <!-- Dropdown Menu End -->
                                        </div>
                                        <!-- Sidebar Header Dropdown End -->
                                        <!-- Sidebar Search Start ");
                WriteLiteral("-->\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca192091", async() => {
                    WriteLiteral(@"
                                            <div class=""input-group"">
                                                <input type=""text"" class=""form-control search border-right-0 transparent-bg pr-0"" placeholder=""Search users..."">
                                                <div class=""input-group-append"">
                                                    <div class=""input-group-text transparent-bg border-left-0"" role=""button"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
    ");
                    WriteLiteral(@"                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/search.svg"" alt=""""> -->
                                                    </div>
                                                </div>
                                            </div>
                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                        <!-- Sidebar Search End -->
                                    </div>
                                    <!-- Sidebar Header End -->
                                </div>
                                <!-- Chat Header End -->
                                <!-- Friend's Call Contact List Start -->
                                <ul class=""contacts-list"" id=""callLogTab"" data-call-list="""">

                                </ul>
                                <!-- Call Contact List Start -->
                            </div>
                        </div>
                    </div>
                    <!-- Calls Tab Content End -->
                    <!-- Friends Tab Content Start -->
                    <div class=""tab-pane"" id=""friends-content"">
                        <div class=""d-flex flex-column h-100"">
                            <div class=""hide-scrollbar"" id=""friendsList"">
                                <!-- Chat Header Start -->
  ");
                WriteLiteral(@"                              <div class=""sidebar-header sticky-top p-2"">

                                    <div class=""d-flex justify-content-between align-items-center"">
                                        <!-- Chat Tab Pane Title Start -->
                                        <h5 class=""font-weight-semibold mb-0"">Friends</h5>
                                        <!-- Chat Tab Pane Title End -->

                                        <ul class=""nav flex-nowrap"">

                                            <li class=""nav-item list-inline-item mr-1"">
                                                <a class=""nav-link text-muted px-1"" href=""#"" title=""Notifications"" role=""button"" data-toggle=""modal"" data-target=""#notificationModal"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                              ");
                WriteLiteral(@"          <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img src=""./~/media/heroicons/outline/bell.svg"" alt="""" class=""injectable hw-20""> -->
                                                </a>
                                            </li>

                                            <li class=""nav-item list-inline-item mr-0"">
                                                <div class=""dropdown"">
                                                    <a class=""nav-link text-muted px-1"" href=""#"" role=""button"" title=""Details"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-exp");
                WriteLiteral(@"anded=""false"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img src=""./~/media/heroicons/outline/dots-vertical.svg"" alt="""" class=""injectable hw-20""> -->
                                                    </a>

                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                    ");
                WriteLiteral(@"    <a class=""dropdown-item"" href=""#"" role=""button"" data-toggle=""modal"" data-target=""#startConversation"">New Chat</a>
                                                        <a class=""dropdown-item"" href=""#"" role=""button"" data-toggle=""modal"" data-target=""#createGroup"">Create Group</a>
                                                        <a class=""dropdown-item"" href=""#"" role=""button"" data-toggle=""modal"" data-target=""#inviteOthers"">Invite Others</a>
                                                    </div>
                                                </div>
                                            </li>
                                        </ul>
                                    </div>


                                    <!-- Sidebar Header Start -->
                                    <div class=""sidebar-sub-header"" style=""display: block;"">
                                        <!-- Sidebar Search Start -->
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1100290", async() => {
                    WriteLiteral("\r\n                                            <div class=\"input-group w-100\">\r\n                                                <input type=\"hidden\" id=\"hidden-search-id\"");
                    BeginWriteAttribute("value", " value=\"", 45137, "\"", 45145, 0);
                    EndWriteAttribute();
                    WriteLiteral(@" />
                                                <input type=""text"" id=""search-accounts-input""
                                                       class=""form-control search border-right-0 transparent-bg pr-0"" placeholder=""Search users..."">
                                                <div class=""input-group-append"">
                                                    <div class=""input-group-text transparent-bg border-left-0"" role=""button"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File");
                    WriteLiteral(@" link -->
                                                        <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/search.svg"" alt=""""> -->
                                                    </div>
                                                </div>
                                            </div>
                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                        <!-- Sidebar Search End -->
                                    </div>
                                    <!-- Sidebar Header End -->
                                </div>
                                <!-- Chat Header End -->
                                <!-- Friends Contact List Start -->
                                <ul class=""contacts-list"" id=""friendsTab"" data-friends-list="""">
                                </ul>
                                <!-- Friends Contact List End -->
                            </div>
                        </div>
                    </div>
                    <!-- Friends Tab Content End -->
                    <!-- Profile Tab Content Start -->
                    <div class=""tab-pane"" id=""profile-content"">
                        <div class=""d-flex flex-column h-100"">
                            <div class=""hide-scrollbar"">
                                <!-- Sidebar Header Start -->
                  ");
                WriteLiteral(@"              <div class=""sidebar-header sticky-top p-2 mb-3"">
                                    <h5 class=""font-weight-semibold"">Profile</h5>
                                    <p class=""text-muted mb-0"">Personal Information & Settings</p>
                                </div>
                                <!-- Sidebar Header end -->
                                <!-- Sidebar Content Start -->
                                <div class=""container-xl"">
                                    <div class=""row"">
                                        <div class=""col"">
                                            <!-- Card Start -->
                                            <div class=""card card-body card-bg-5"">
                                                <!-- Card Details Start -->
                                                <div class=""d-flex flex-column align-items-center"">
                                                    <div class=""avatar avatar-lg mb-3"">
");
#nullable restore
#line 589 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                         if (Model.AccountDetailViewModel.ProfileImg == null)
                                                        {


#line default
#line hidden
#nullable disable
                WriteLiteral("                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1105996", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 593 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"

                                                        }
                                                        else
                                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                            <img class=\"avatar-img\"");
                BeginWriteAttribute("src", " src=\"", 49141, "\"", 49216, 1);
#nullable restore
#line 597 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
WriteAttributeValue("", 49147, _cloudinaryService.BuildUrl(Model.AccountDetailViewModel.ProfileImg), 49147, 69, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("alt", " alt=\"", 49217, "\"", 49223, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
#nullable restore
#line 598 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                        }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                    </div>

                                                    <div class=""d-flex flex-column align-items-center"">
                                                        <h5 class=""profilename fullnameprofilimage"">");
#nullable restore
#line 603 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                                Write(Model.AccountDetailViewModel.Name+" "+Model.AccountDetailViewModel.Surname);

#line default
#line hidden
#nullable disable
                WriteLiteral("</h5>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"d-flex\">\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1109358", async() => {
                    WriteLiteral(@"
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-18 d-none d-sm-inline-block"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-18 d-sm-inline-block"" src=""./~/media/heroicons/outline/logout.svg"" alt=""""> -->
                                                            <span>Logout</span>
                                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_19.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_20.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                        <button class=""btn btn-outline-default mx-1 d-xl-none"" data-profile-edit="""" type=""button"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-18 d-none d-sm-inline-block"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"" ");
                WriteLiteral(@"/>
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15 12a3 3 0 11-6 0 3 3 0 016 0z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-18 d-sm-inline-block"" src=""./~/media/heroicons/outline/cog.svg"" alt=""""> -->
                                                            <span>Settings</span>
                                                        </button>
                                                    </div>
                                                </div>
                                                <!-- Card Details End -->
                                                <!-- Card Options Start -->
                                                <div class=""card-options"">
           ");
                WriteLiteral(@"                                         <div class=""dropdown "">
                                                        <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted text-muted"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""");
                WriteLiteral(@"injectable hw-20"" src=""./~/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                                        </button>
                                                        <!--update profile img-->
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1115409", async() => {
                    WriteLiteral(@"
                                                            <div class=""dropdown-menu deletedshow"">
                                                                <button class=""dropdown-item profile-img-view viewphoto"">View Photo</button>
                                                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1115987", async() => {
                        WriteLiteral("Upload Photo");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 647 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Image);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1117850", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 648 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Image);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1119653", async() => {
                        WriteLiteral("Remove Photo");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_26.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_26);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_27.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_27);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                            </div>\r\n                                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_28.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_28);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <!-- Card Options End -->

                                            </div>
                                            <!-- Card End -->
                                            <!-- Card Start -->
                                            <div class=""card mt-3"">

                                                <!-- List Group Start -->
                                                <ul class=""list-group list-group-flush"">

                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item py-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-body"">
                                                          ");
                WriteLiteral("      <p class=\"small text-muted mb-0\">Local Time</p>\r\n\r\n                                                                <p class=\"mb-0 localtime\">");
#nullable restore
#line 670 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                     Write(Model.AccountDetailViewModel.LastLogin);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</p>


                                                            </div>
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src=""./~/media/heroicons/outline/clock.svg"" alt=""""> -->
                                                        </div>
                                                    </li>
                                                    <!");
                WriteLiteral(@"-- List Group Item End -->
                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item py-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-body"">
                                                                <p class=""small text-muted mb-0"">Birthdate</p>
                                                                <p class=""mb-0 birthday"">
");
#nullable restore
#line 690 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                     if (Model.AccountDetailViewModel.Birthday != null)
                                                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                        <span>");
#nullable restore
#line 692 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                         Write(Model.AccountDetailViewModel.Birthday.ToString().Substring(0, 11));

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>\r\n");
#nullable restore
#line 693 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                                                </p>
                                                            </div>
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src=""./~/media/heroicons/outline/calendar.svg"" alt=""""> -->
                                                        </div>
       ");
                WriteLiteral(@"                                             </li>
                                                    <!-- List Group Item End -->
                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item py-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-body"">
                                                                <p class=""small text-muted mb-0"">Phone</p>
                                                                <p class=""mb-0 phone"">");
#nullable restore
#line 711 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                 Write(Model.AccountDetailViewModel.Phone);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</p>
                                                            </div>
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src=""./~/media/heroicons/outline/phone.svg"" alt=""""> -->
           ");
                WriteLiteral(@"                                             </div>
                                                    </li>
                                                    <!-- List Group Item End -->
                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item py-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-body"">
                                                                <p class=""small text-muted mb-0"">Email</p>
                                                                <p class=""mb-0 email"">");
#nullable restore
#line 728 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                 Write(Model.AccountDetailViewModel.Email);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</p>
                                                            </div>

                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src=""./~/media/heroicons/outline/mail.svg"" alt=""""> -->
                                                        </div>
                                                    </li>
");
                WriteLiteral(@"                                                    <!-- List Group Item End -->
                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item py-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-body"">
                                                                <p class=""small text-muted mb-0"">Website</p>

                                                                <p class=""mb-0 website"">");
#nullable restore
#line 747 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                   Write(Model.AccountDetailViewModel.Website);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</p>

                                                            </div>
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src=""./~/media/heroicons/outline/globe.svg"" alt=""""> -->
                          ");
                WriteLiteral(@"                              </div>
                                                    </li>
                                                    <!-- List Group Item End -->
                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item pt-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-body"">
                                                                <p class=""small text-muted mb-0"">Address</p>

                                                                <p class=""mb-0 address"">");
#nullable restore
#line 766 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                   Write(Model.AccountDetailViewModel.Address);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</p>


                                                            </div>
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src=""./~/media/heroicons/outline/home.svg"" alt=""""> -->
                                                        </div>
             ");
                WriteLiteral(@"                                       </li>
                                                    <!-- List Group Item End -->

                                                </ul>
                                                <!-- List Group End -->

                                            </div>
                                            <!-- Card End -->
                                            <!-- Card Start -->
                                            <div class=""card my-3"">

                                                <!-- List Group Start -->
                                                <ul class=""list-group list-group-flush"">

                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item py-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-b");
                WriteLiteral("ody\">\r\n                                                                <p class=\"small text-muted mb-0\">Facebook</p>\r\n");
#nullable restore
#line 797 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                 if (Model.AccountSocialLinkViewModel != null)
                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                    <a class=\"font-size-sm font-weight-medium facebook\" href=\"#\">");
#nullable restore
#line 799 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                                                            Write(Model.AccountSocialLinkViewModel.Facebook);

#line default
#line hidden
#nullable disable
                WriteLiteral("</a>\r\n");
#nullable restore
#line 800 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                            </div>
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"">
                                                                <path d=""M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src=""./~/media/icons/facebook.svg"" alt=""""> -->
                                                        </div>
                                                    </li>
                                                 ");
                WriteLiteral(@"   <!-- List Group Item End -->
                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item py-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-body"">
                                                                <p class=""small text-muted mb-0"">Twitter</p>
");
#nullable restore
#line 818 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                 if (Model.AccountSocialLinkViewModel != null)
                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                    <a class=\"font-size-sm font-weight-medium twitter\" href=\"#\">");
#nullable restore
#line 820 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                                                           Write(Model.AccountSocialLinkViewModel.Twitter);

#line default
#line hidden
#nullable disable
                WriteLiteral("</a>\r\n");
#nullable restore
#line 821 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                            </div>
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"">
                                                                <path d=""M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src=""./~/media/icons/twitter.svg"" alt=""""> -->
                                                        </div>
   ");
                WriteLiteral(@"                                                 </li>
                                                    <!-- List Group Item End -->
                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item py-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-body"">
                                                                <p class=""small text-muted mb-0"">Instagram</p>
");
#nullable restore
#line 839 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                 if (Model.AccountSocialLinkViewModel != null)
                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                    <a class=\"font-size-sm font-weight-medium instagram\" href=\"#\">");
#nullable restore
#line 841 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                                                             Write(Model.AccountSocialLinkViewModel.Instagram);

#line default
#line hidden
#nullable disable
                WriteLiteral("</a>\r\n");
#nullable restore
#line 842 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                                            </div>
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"">
                                                                <rect x=""2"" y=""2"" width=""20"" height=""20"" rx=""5"" ry=""5"" />
                                                                <path d=""M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"" />
                                                                <line x1=""17.5"" y1=""6.5"" x2=""17.51"" y2=""6.5"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src=");
                WriteLiteral(@"""./~/media/icons/instagram.svg"" alt=""""> -->
                                                        </div>
                                                    </li>
                                                    <!-- List Group Item End -->
                                                    <!-- List Group Item Start -->
                                                    <li class=""list-group-item py-2"">
                                                        <div class=""media align-items-center"">
                                                            <div class=""media-body"">
                                                                <p class=""small text-muted mb-0"">Linkedin</p>
");
#nullable restore
#line 861 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                 if (Model.AccountSocialLinkViewModel != null)
                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                    <a class=\"font-size-sm font-weight-medium linkedin\" href=\"#\">");
#nullable restore
#line 863 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                                                            Write(Model.AccountSocialLinkViewModel.Linkedin);

#line default
#line hidden
#nullable disable
                WriteLiteral("</a>\r\n");
#nullable restore
#line 864 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                            </div>
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""text-muted hw-20 ml-1"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"">
                                                                <path d=""M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"" />
                                                                <rect x=""2"" y=""9"" width=""4"" height=""12"" />
                                                                <circle cx=""4"" cy=""4"" r=""2"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable text-muted hw-20 ml-1"" src");
                WriteLiteral(@"=""./~/media/icons/linkedin.svg"" alt=""""> -->
                                                        </div>
                                                    </li>
                                                    <!-- List Group Item End -->

                                                </ul>
                                                <!-- List Group End -->

                                            </div>
                                            <!-- Card End -->

                                        </div>
                                    </div>
                                </div>
                                <!-- Sidebar Content End -->
                            </div>
                        </div>
                    </div>
                    <!-- Profile Tab Content End -->
                </div>
                <!-- Tab Content End -->
            </aside>
            <!-- Sidebar End -->
            <!-- Main Start -->
            <main class=""m");
                WriteLiteral(@"ain main-visible"">


                <!--Chats page start-->
                <div class=""chats"">
                    <!-- Chats Page introduction Start -->
                    <div class=""d-flex flex-column justify-content-center text-center h-100 w-100"">
                        <div class=""container"">
                            <div class=""avatar avatar-lg mb-2"">
");
#nullable restore
#line 908 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                 if (string.IsNullOrEmpty(Model.AccountDetailViewModel.ProfileImg))
                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1150188", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 911 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                }
                                else
                                {


#line default
#line hidden
#nullable disable
                WriteLiteral("                                    <img class=\"avatar-img\"");
                BeginWriteAttribute("src", " src=\"", 77048, "\"", 77123, 1);
#nullable restore
#line 915 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
WriteAttributeValue("", 77054, _cloudinaryService.BuildUrl(Model.AccountDetailViewModel.ProfileImg), 77054, 69, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("alt", " alt=\"", 77124, "\"", 77130, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
#nullable restore
#line 916 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                }

#line default
#line hidden
#nullable disable
                WriteLiteral("                            </div>\r\n\r\n                            <h5>Welcome, ");
#nullable restore
#line 919 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                    Write(Model.AccountDetailViewModel.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 919 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                       Write(Model.AccountDetailViewModel.Surname);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"!</h5>
                            <p class=""text-muted"">Please select a chat to Start messaging.</p>

                            <button class=""btn btn-outline-primary no-box-shadow"" type=""button"" data-toggle=""modal"" data-target=""#startConversation"">
                                Start a conversation
                            </button>
                        </div>
                    </div>
                    <!-- Chats Page introduction End -->
                    <!-- Chats wrapper Start -->
                    <div class=""chat-body d-none"">

                        <!-- Chat Header Start-->
                        <div class=""chat-header"">
                            <!-- Chat Back Button (Visible only in Small Devices) -->
                            <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted d-xl-none"" type=""button"" data-close="""">
                                <!-- Default :: Inline SVG -->
                                <svg class=""hw-20"" fill=""n");
                WriteLiteral(@"one"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M10 19l-7-7m0 0l7-7m-7 7h18"" />
                                </svg>

                                <!-- Alternate :: External File link -->
                                <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/arrow-left.svg"" alt=""""> -->
                            </button>

                            <!-- Chat participant's Name -->
                            <div class=""media chat-name align-items-center text-truncate"">
                                <div class=""avatar avatar-online d-none d-sm-inline-block mr-3"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1155106", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </div>

                                <div class=""media-body align-self-center "">
                                    <h6 class=""text-truncate mb-0"">Catherine Richardson</h6>
                                    <small class=""text-muted"">Online</small>
                                </div>
                            </div>

                            <!-- Chat Options -->
                            <ul class=""nav flex-nowrap"">
                                <li class=""nav-item list-inline-item d-none d-sm-block mr-1"">
                                    <a class=""nav-link text-muted px-1"" data-toggle=""collapse"" data-target=""#searchCollapse"" href=""#"" aria-expanded=""false"">
                                        <!-- Default :: Inline SVG -->
                                        <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-");
                WriteLiteral(@"width=""2"" d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                        </svg>

                                        <!-- Alternate :: External File link -->
                                        <!-- <img src=""./~/media/heroicons/outline/search.svg"" alt="""" class=""injectable hw-20""> -->
                                    </a>
                                </li>

                                <li class=""nav-item list-inline-item d-none d-sm-block mr-1"">
                                    <a class=""nav-link text-muted px-1"" href=""#"" title=""Add People"">
                                        <!-- Default :: Inline SVG -->
                                        <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1");
                WriteLiteral(@".13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"" />
                                        </svg>

                                        <!-- Alternate :: External File link -->
                                        <!-- <img src=""./~/media/heroicons/outline/phone.svg"" alt="""" class=""injectable hw-20""> -->
                                    </a>
                                </li>
                                <li class=""nav-item list-inline-item d-none d-sm-block mr-0"">
                                    <div class=""dropdown"">
                                        <a class=""nav-link text-muted px-1"" href=""#"" role=""button"" title=""Details"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                        ");
                WriteLiteral(@"        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img src=""./~/media/heroicons/outline/dots-vertical.svg"" alt="""" class=""injectable hw-20""> -->
                                        </a>

                                        <div class=""dropdown-menu dropdown-menu-right"">
                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"" data-chat-info-toggle="""">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path st");
                WriteLiteral(@"roke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/information-circle.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>View Info</span>
                                            </a>

                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5.586 15H4a1 1 0 01-1-1v-4");
                WriteLiteral(@"a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"" clip-rule=""evenodd"" />
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/volume-off.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Mute Notifications</span>
                                            </a>
                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""curre");
                WriteLiteral(@"ntColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/photograph.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Wallpaper</span>
                                            </a>
                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColo");
                WriteLiteral(@"r"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/archive.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Archive</span>
                                            </a>
                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""roun");
                WriteLiteral(@"d"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/trash.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Delete</span>
                                            </a>
                                            <a class=""dropdown-item align-items-center d-flex text-danger"" href=""#"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stro");
                WriteLiteral(@"ke-width=""2"" d=""M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/ban.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Block</span>
                                            </a>
                                        </div>
                                    </div>
                                </li>
                                <li class=""nav-item list-inline-item d-sm-none mr-0"">
                                    <div class=""dropdown"">
                                        <a class=""nav-link text-muted px-1"" href=""#"" role=""button"" title=""Details"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                      ");
                WriteLiteral(@"      <!-- Default :: Inline SVG -->
                                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img src=""./~/media/heroicons/outline/dots-vertical.svg"" alt="""" class=""injectable hw-20""> -->
                                        </a>

                                        <div class=""dropdown-menu dropdown-menu-right"">
                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"">
                                                <!-- Default :: Inline SVG -->
                ");
                WriteLiteral(@"                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/phone.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Call</span>
                                            </a>
                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"" data-toggle=""collapse"" data-target=""#searchCollapse"" a");
                WriteLiteral(@"ria-expanded=""false"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/search.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Search</span>
                                            </a>

                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"" data-chat-info-toggle="""">
                                                <!-- Default :: Inline SV");
                WriteLiteral(@"G -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/information-circle.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>View Info</span>
                                            </a>

                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" v");
                WriteLiteral(@"iewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"" clip-rule=""evenodd"" />
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/volume-off.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Mute Notifications</span>
                                            </a>
                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"">
  ");
                WriteLiteral(@"                                              <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/photograph.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Wallpaper</span>
                                            </a>
                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"">
        ");
                WriteLiteral(@"                                        <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/archive.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Archive</span>
                                            </a>
                                            <a class=""dropdown-item align-items-center d-flex"" href=""#"">
                                                <!-- Default :: Inline SVG -->
           ");
                WriteLiteral(@"                                     <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/trash.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Delete</span>
                                            </a>
                                            <a class=""dropdown-item align-items-center d-flex text-danger"" href=""#"">
                                                <!-- Default :: Inline SVG -->
                                          ");
                WriteLiteral(@"      <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img src=""./~/media/heroicons/outline/ban.svg"" alt="""" class=""injectable hw-20 mr-2""> -->
                                                <span>Block</span>
                                            </a>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <!-- Chat Header End-->
                        <!-- Search Start -->
          ");
                WriteLiteral(@"              <div class=""collapse border-bottom px-3"" id=""searchCollapse"">
                            <div class=""container-xl py-2 px-0 px-md-3"">
                                <div class=""input-group bg-light "">
                                    <input type=""text"" class=""form-control form-control-md border-right-0 transparent-bg pr-0"" placeholder=""Search..."">
                                    <div class=""input-group-append"">
                                        <span class=""input-group-text transparent-bg border-left-0"">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-20 text-muted"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                            </svg>

                                            <!-- ");
                WriteLiteral(@"Alternate :: External File link -->
                                            <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/search.svg"" alt=""Search icon""> -->
                                        </span>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <!-- Search End -->
                        <!-- Chat Content Start-->
                        <div class=""chat-content p-2"" id=""messageBody"">
                            <div class=""container"">

                                <!-- Message Day Start -->
                                <div class=""message-day"">

                                    <div class=""message-divider sticky-top pb-2"" data-label=""Yesterday"">&nbsp;</div>

                                    <!-- Received Message Start -->
                                    <div class=""message"">
                                        <d");
                WriteLiteral(@"iv class=""message-wrapper"">
                                            <div class=""message-content"">
                                                <span>I have to give a presentation on global warming on Friday, and I am so nervous.</span>
                                            </div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1179642", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <span class=""message-date"">9:12am</span>
                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" src="".");
                WriteLiteral(@"/~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <");
                WriteLiteral(@"!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2""");
                WriteLiteral(@" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media/heroico");
                WriteLiteral(@"ns/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
  ");
                WriteLiteral(@"                                                      </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v");
                WriteLiteral(@"6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Received Message End -->
                                    <!-- Self Message Start -->
                                    <div class=""message self"">
                                        <div class=""message-wrapper"">
                                 ");
                WriteLiteral(@"           <div class=""message-content"">
                                                <span>First of all, you need to understand the subject matter thoroughly. You need to know what is global warming, what causes global warming, and what people should do to abate the effects of global warming.</span>
                                            </div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1188966", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>

                                            <span class=""message-date"">9:12am</span>
                                            <span class=""message-status"">Edited</span>

                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
 ");
                WriteLiteral(@"                                                   <!-- <img class=""injectable hw-18"" src=""./~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Al");
                WriteLiteral(@"ternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"" />
                                                        </svg>

                                             ");
                WriteLiteral(@"           <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/pencil.svg"" alt=""message edit""> -->
                                                        <span>Edit</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File l");
                WriteLiteral(@"ink -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                       ");
                WriteLiteral(@"                                 <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a");
                WriteLiteral(@"1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linej");
                WriteLiteral(@"oin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Self Message End -->
                                    <!-- Received Message Start -->
                                    <div class=""message"">
     ");
                WriteLiteral(@"                                   <div class=""message-wrapper"">
                                            <div class=""message-content"">
                                                <span>I have done a lot of research on the subject, and I know I can answer any questions I will receive from the audience.</span>
                                            </div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1199392", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <span class=""message-date"">9:12am</span>
                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" src="".");
                WriteLiteral(@"/~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <");
                WriteLiteral(@"!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2""");
                WriteLiteral(@" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media/heroico");
                WriteLiteral(@"ns/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
  ");
                WriteLiteral(@"                                                      </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v");
                WriteLiteral(@"6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Received Message End -->
                                    <!-- Received Message Start -->
                                    <div class=""message"">
                                        <div class=""message-wrapper"">
                                  ");
                WriteLiteral(@"          <div class=""message-content"">
                                                <span>I should talk about more precisely the sequence of my presentation?</span>
                                            </div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1208580", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <span class=""message-date"">9:12am</span>
                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" src="".");
                WriteLiteral(@"/~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <");
                WriteLiteral(@"!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2""");
                WriteLiteral(@" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media/heroico");
                WriteLiteral(@"ns/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
  ");
                WriteLiteral(@"                                                      </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v");
                WriteLiteral(@"6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Received Message End -->
                                    <!-- Self Message Start -->
                                    <div class=""message self"">
                                        <div class=""message-wrapper"">
                                 ");
                WriteLiteral(@"           <div class=""message-content""><span>Yes, what you should present first, second and third…</span></div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1217659", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>

                                            <span class=""message-date"">9:12am</span>

                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" sr");
                WriteLiteral(@"c=""./~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                     ");
                WriteLiteral(@"   <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                   ");
                WriteLiteral(@"                     <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/pencil.svg"" alt=""message edit""> -->
                                                        <span>Edit</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""inject");
                WriteLiteral(@"able hw-18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src="".");
                WriteLiteral(@"/~/media/heroicons/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.51");
                WriteLiteral(@"9-4.674z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.99");
                WriteLiteral(@"5-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Self Message End -->
                                    <!-- Message Start -->
                                    <div class=""message"">
                                        <div class=""message-wrapper"">
                               ");
                WriteLiteral(@"             <div class=""message-content"">
                                                <div class=""document"">
                                                    <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/document.svg"" alt=""""> -->
      ");
                WriteLiteral(@"                                              </div>

                                                    <div class=""document-body"">
                                                        <h6>
                                                            <a href=""#"" class=""text-reset"" title=""global-warming-data-2020.xlxs"">global-warming-data-2020.xlxs</a>
                                                        </h6>

                                                        <ul class=""list-inline small mb-0"">
                                                            <li class=""list-inline-item"">
                                                                <span class=""text-muted"">79.2 KB</span>
                                                            </li>
                                                            <li class=""list-inline-item"">
                                                                <span class=""text-muted text-uppercase"">xlxs</span>
                                ");
                WriteLiteral(@"                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1230140", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>

                                            <span class=""message-date"">9:12am</span>

                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" sr");
                WriteLiteral(@"c=""./~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/med");
                WriteLiteral(@"ia/heroicons/outline/download.svg"" alt=""download""> -->
                                                        <span>Download</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""messa");
                WriteLiteral(@"ge replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""message forward""> -->
     ");
                WriteLiteral(@"                                                   <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
                                                        <");
                WriteLiteral(@"/svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" /");
                WriteLiteral(@">
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Message End -->
                                    <!-- Received Message Start -->
                                    <div class=""message"">
                                        <div class=""message-wrapper"">
                                            <div class=""message-content""><span>If that is the case");
                WriteLiteral(@", then I already have an outline. To make it easy for my audience to follow the presentation, I intend to post the outline on the board at all time during my speech.</span></div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1239285", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <span class=""message-date"">9:12am</span>
                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" src="".");
                WriteLiteral(@"/~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <");
                WriteLiteral(@"!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2""");
                WriteLiteral(@" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18  rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media/heroic");
                WriteLiteral(@"ons/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
 ");
                WriteLiteral(@"                                                       </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4");
                WriteLiteral(@"v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Received Message End -->
                                </div>
                                <!-- Message Day End -->
                                <!-- Message Day Start -->
                                <div class=""message-day"">

             ");
                WriteLiteral(@"                       <div class=""message-divider sticky-top pb-2"" data-label=""Today"">&nbsp;</div>

                                    <!-- Self Message Start -->
                                    <div class=""message self"">
                                        <div class=""message-wrapper"">
                                            <div class=""message-content""><span>Good idea! By the way, do you have any facts to back you up? For example, change of climate, yearly disasters…</span></div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1248763", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>

                                            <span class=""message-date"">9:12am</span>
                                            <span class=""message-status"">Edited</span>

                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>
                                                    <!-- <img class=""injectable hw-18"" src=""./~/m");
                WriteLiteral(@"edia/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- ");
                WriteLiteral(@"<img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                           ");
                WriteLiteral(@"             <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/pencil.svg"" alt=""message edit""> -->
                                                        <span>Edit</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-");
                WriteLiteral(@"18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media");
                WriteLiteral(@"/heroicons/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z");
                WriteLiteral(@""" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L");
                WriteLiteral(@"5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Self Message End -->
                                    <!-- Received Message Start -->
                                    <div class=""message"">
                                        <div class=""message-wrapper"">
                              ");
                WriteLiteral(@"              <div class=""message-content"">
                                                <h6>I have shared some photos, Please have a look.</h6>
                                                <div class=""form-row"">
                                                    <div class=""col"">
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1258972", async() => {
                    WriteLiteral("\r\n                                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1259297", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_31);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_32);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_33);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                    </div>\r\n                                                    <div class=\"col\">\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1261834", async() => {
                    WriteLiteral("\r\n                                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1262159", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_32);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_35);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                    </div>\r\n                                                    <div class=\"col\">\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1264696", async() => {
                    WriteLiteral("\r\n                                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1265021", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_36);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_32);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_37);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1267729", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <span class=""message-date"">9:12am</span>
                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" src="".");
                WriteLiteral(@"/~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/h");
                WriteLiteral(@"eroicons/outline/download.svg"" alt=""download""> -->
                                                        <span>Download</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""message r");
                WriteLiteral(@"eplay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""message forward""> -->
         ");
                WriteLiteral(@"                                               <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
                                                        </svg");
                WriteLiteral(@">

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
 ");
                WriteLiteral(@"                                                       </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Received Message End -->
                                    <!-- Received Message Start -->
                                    <div class=""message"">
                                        <div class=""message-wrapper"">
                                            <div class=""message-content""><span>No, I have not");
                WriteLiteral(@" thought about that. I better get some statistics from the Internet. I should not have any problems since the Internet has all kinds of data.</span></div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1276850", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <span class=""message-date"">9:12am</span>
                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" src="".");
                WriteLiteral(@"/~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <");
                WriteLiteral(@"!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2""");
                WriteLiteral(@" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18  rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media/heroic");
                WriteLiteral(@"ons/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
 ");
                WriteLiteral(@"                                                       </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4");
                WriteLiteral(@"v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Received Message End -->
                                    <!-- Self Message Start -->
                                    <div class=""message self"">
                                        <div class=""message-wrapper"">
                                ");
                WriteLiteral(@"            <div class=""message-content""><span>Pictures will keep your audience from being bored. In order for you to succeed, you need to keep them interested and involved.</span></div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1286003", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>

                                            <span class=""message-date"">9:12am</span>

                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" sr");
                WriteLiteral(@"c=""./~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                     ");
                WriteLiteral(@"   <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                   ");
                WriteLiteral(@"                     <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/pencil.svg"" alt=""message edit""> -->
                                                        <span>Edit</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""inject");
                WriteLiteral(@"able hw-18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src="".");
                WriteLiteral(@"/~/media/heroicons/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.51");
                WriteLiteral(@"9-4.674z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.99");
                WriteLiteral(@"5-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Self Message End -->
                                    <!-- Received Message Start -->
                                    <div class=""message"">
                                        <div class=""message-wrapper"">
                      ");
                WriteLiteral(@"                      <div class=""message-content""><span>You are absolutely right. I will take time to practice and to learn to relax and express myself really well. Wish me luck, Catherine!</span></div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1296259", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>
                                            <span class=""message-date"">9:12am</span>
                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" src="".");
                WriteLiteral(@"/~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <");
                WriteLiteral(@"!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2""");
                WriteLiteral(@" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=""./~/media/heroico");
                WriteLiteral(@"ns/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"" />
  ");
                WriteLiteral(@"                                                      </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v");
                WriteLiteral(@"6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Received Message End -->
                                    <!-- Self Message Start -->
                                    <div class=""message self"">
                                        <div class=""message-wrapper"">
                                 ");
                WriteLiteral(@"           <div class=""message-content""><span>I know you. You can do it. Good luck, Jennifer!</span></div>
                                        </div>
                                        <div class=""message-options"">
                                            <div class=""avatar avatar-sm"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1305332", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</div>

                                            <span class=""message-date"">Just now</span>

                                            <div class=""dropdown"">
                                                <a class=""text-muted"" href=""#"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-18"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-18"" ");
                WriteLiteral(@"src=""./~/media/heroicons/outline/dots-horizontal.svg"" alt=""message options""> -->
                                                </a>

                                                <div class=""dropdown-menu"">
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                   ");
                WriteLiteral(@"     <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/duplicate.svg"" alt=""message options""> -->
                                                        <span>Copy</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                 ");
                WriteLiteral(@"                       <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/pencil.svg"" alt=""message edit""> -->
                                                        <span>Edit</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""inje");
                WriteLiteral(@"ctable hw-18 mr-2"" src=""./~/media/heroicons/outline/reply.svg"" alt=""message replay""> -->
                                                        <span>Replay</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 rotate-y mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable rotate-y hw-18 mr-2"" src=");
                WriteLiteral(@"""./~/media/heroicons/outline/reply.svg"" alt=""message forward""> -->
                                                        <span>Forward</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.");
                WriteLiteral(@"519-4.674z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/star.svg"" alt=""message favourite""> -->
                                                        <span>Favourite</span>
                                                    </a>
                                                    <a class=""dropdown-item d-flex align-items-center text-danger"" href=""#"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-18 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.");
                WriteLiteral(@"995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-18 mr-2"" src=""./~/media/heroicons/outline/trash.svg"" alt=""message delete""> -->
                                                        <span>Delete</span>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Self Message End -->
                                </div>
                                <!-- Message Day End -->

                            </div>

                            <!-- Scroll to finish -->
                          ");
                WriteLiteral(@"  <div class=""chat-finished"" id=""chat-finished""></div>
                        </div>
                        <!-- Chat Content End-->
                        <!-- Chat Footer Start-->
                        <div class=""chat-footer"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1315454", async() => {
                    WriteLiteral(@"
                                <div class=""form-row"">
                                    <!-- Chat Input Group Start -->
                                    <div class=""col"">
                                        <div class=""input-group"">
                                            <!-- Attachment Start -->
                                            <div class=""input-group-prepend mr-sm-2 mr-1"">
                                                <div class=""dropdown"">
                                                    <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted text-muted"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                        <!-- Default :: Inline SVG -->
                                                        <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoi");
                    WriteLiteral(@"n=""round"" stroke-width=""2"" d=""M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                        </svg>

                                                        <!-- Alternate :: External File link -->
                                                        <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/plus-circle.svg"" alt=""""> -->
                                                    </button>
                                                    <div class=""dropdown-menu"">
                                                        <a class=""dropdown-item"" href=""#"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4 16l");
                    WriteLiteral(@"4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-20 mr-2"" src=""./~/media/heroicons/outline/photograph.svg"" alt=""""> -->
                                                            <span>Gallery</span>
                                                        </a>
                                                        <a class=""dropdown-item"" href=""#"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path");
                    WriteLiteral(@" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-20 mr-2"" src=""./~/media/heroicons/outline/volume-up.svg"" alt=""""> -->
                                                            <span>Audio</span>
                                                        </a>
                                                        <a class=""dropdown-item"" href=""#"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 ");
                    WriteLiteral(@"24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-20 mr-2"" src=""./~/media/heroicons/outline/document.svg"" alt=""""> -->
                                                            <span>Document</span>
                                                        </a>
                                                        <a class=""dropdown-item"" href=""#"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-20 mr-2""");
                    WriteLiteral(@" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-20 mr-2"" src=""./~/media/heroicons/outline/user.svg"" alt=""""> -->
                                                            <span>Contact</span>
                                                        </a>
                                                        <a class=""dropdown-item"" href=""#"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-20 mr-2"" fill=""none"" viewB");
                    WriteLiteral(@"ox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"" />
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15 11a3 3 0 11-6 0 3 3 0 016 0z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-20 mr-2"" src=""./~/media/heroicons/outline/location-marker.svg"" alt=""""> -->
                                                            <span>Location</span>
                                                        </a>
                                                        <a class=""dropdown-item"" href=""#"">
         ");
                    WriteLiteral(@"                                                   <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-20 mr-2"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-20 mr-2"" src=""./~/media/heroicons/outline/chart-square-bar.svg"" alt=""""> -->
                                                            <span>Poll</span>
                                                        </a>
                                                    </div>
                              ");
                    WriteLiteral(@"                  </div>
                                            </div>
                                            <!-- Attachment End -->
                                            <!-- Emoji Start -->
                                            <div class=""input-group-prepend mr-sm-2 mr-1"">
                                                <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted text-muted"" type=""button"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External ");
                    WriteLiteral(@"File link -->
                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/emoji-happy.svg"" alt=""""> -->
                                                </button>
                                            </div>
                                            <!-- Emoji End -->
                                            <!-- Textarea Start-->
                                            <textarea class=""form-control transparent-bg border-0 no-resize hide-scrollbar"" placeholder=""Write your message..."" rows=""1""></textarea>
                                            <!-- Textarea End -->
                                        </div>
                                    </div>
                                    <!-- Chat Input Group End -->
                                    <!-- Submit Button Start -->
                                    <div class=""col-auto"">
                                        <div class=""btn btn-primary btn-icon round");
                    WriteLiteral(@"ed-circle text-light mb-1"" role=""button"">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M14 5l7 7m0 0l-7 7m7-7H3"" />
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img src=""./~/media/heroicons/outline/arrow-right.svg"" alt="""" class=""injectable hw-24""> -->
                                        </div>
                                    </div>
                                    <!-- Submit Button End-->
                                </div>
                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </div>
                        <!-- Chat Footer End-->
                    </div>

                    <!-- Chat Info Start -->
                    <div class=""chat-info"">
                        <div class=""d-flex h-100 flex-column"">

                            <!-- Chat Info Header Start -->
                            <div class=""chat-info-header px-2"">
                                <div class=""container-fluid"">
                                    <ul class=""nav justify-content-between align-items-center"">
                                        <!-- Sidebar Title Start -->
                                        <li class=""text-center"">
                                            <h5 class=""text-truncate mb-0"">Profile Details</h5>
                                        </li>
                                        <!-- Sidebar Title End -->
                                        <!-- Close Sidebar Start -->
                                        <li class=");
                WriteLiteral(@"""nav-item list-inline-item"">
                                            <a class=""nav-link text-muted px-0"" href=""#"" data-chat-info-close="""">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-22"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M6 18L18 6M6 6l12 12"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img class=""injectable hw-22"" src=""./~/media/heroicons/outline/x.svg"" alt=""""> -->

                                            </a>
                                        </li>
                                        <!-- Close Sidebar End -->
                                    </ul>
                               ");
                WriteLiteral(@" </div>
                            </div>
                            <!-- Chat Info Header End  -->
                            <!-- Chat Info Body Start  -->
                            <div class=""hide-scrollbar flex-fill"">

                                <!-- User Profile Start -->
                                <div class=""text-center p-3"">

                                    <!-- User Profile Picture -->
                                    <div class=""avatar avatar-xl mx-5 mb-3"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1331265", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </div>

                                    <!-- User Info -->
                                    <h5 class=""mb-1"">Catherine Richardson</h5>
                                    <p class=""text-muted d-flex align-items-center justify-content-center"">
                                        <!-- Default :: Inline SVG -->
                                        <svg class=""hw-18 mr-1"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"" />
                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M15 11a3 3 0 11-6 0 3 3 0 016 0z"" />
                                        </svg>

                                        <!-- Alternate :: External File link -->
                                        <!-- <i");
                WriteLiteral(@"mg class=""injectable mr-1 hw-18"" src=""./~/media/heroicons/outline/location-marker.svg"" alt=""""> -->
                                        <span>San Fransisco, CA</span>
                                    </p>

                                    <!-- User Quick Options -->
                                    <div class=""d-flex align-items-center justify-content-center"">
                                        <div class=""btn btn-outline-default btn-icon rounded-circle mx-1"">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"" />
                                            </svg>

                                            <!-- Alternate :: External File");
                WriteLiteral(@" link -->
                                            <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/user-add.svg"" alt=""""> -->
                                        </div>
                                        <div class=""btn btn-primary btn-icon rounded-circle text-light mx-1"">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"" />
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/heart.svg"" alt="""">");
                WriteLiteral(@" -->
                                        </div>
                                        <div class=""btn btn-danger btn-icon rounded-circle text-light mx-1"">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636"" />
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/ban.svg"" alt=""""> -->
                                        </div>
                                    </div>
                                </div>
                                <!-- U");
                WriteLiteral(@"ser Profile End -->
                                <!-- User Information Start -->
                                <div class=""chat-info-group"">
                                    <a class=""chat-info-group-header"" data-toggle=""collapse"" href=""#profile-info"" role=""button"" aria-expanded=""true"" aria-controls=""profile-info"">
                                        <h6 class=""mb-0"">User Information</h6>

                                        <!-- Default :: Inline SVG -->
                                        <svg class=""hw-20 text-muted"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                        </svg>

                                        <!-- Alternate :: External File link -->
                                        <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/he");
                WriteLiteral(@"roicons/outline/information-circle.svg"" alt=""""> -->
                                    </a>

                                    <div class=""chat-info-group-body collapse show"" id=""profile-info"">
                                        <div class=""chat-info-group-content list-item-has-padding"">
                                            <!-- List Group Start -->
                                            <ul class=""list-group list-group-flush "">

                                                <!-- List Group Item Start -->
                                                <li class=""list-group-item border-0"">
                                                    <p class=""small text-muted mb-0"">Phone</p>
                                                    <p class=""mb-0"">+01-222-364522</p>
                                                </li>
                                                <!-- List Group Item End -->
                                                <!-- List Group Item Start -->");
                WriteLiteral(@"
                                                <li class=""list-group-item border-0"">
                                                    <p class=""small text-muted mb-0"">Email</p>
                                                    <p class=""mb-0"">catherine.richardson@gmail.com</p>
                                                </li>
                                                <!-- List Group Item End -->
                                                <!-- List Group Item Start -->
                                                <li class=""list-group-item border-0"">
                                                    <p class=""small text-muted mb-0"">Address</p>
                                                    <p class=""mb-0"">1134 Ridder Park Road, San Fransisco, CA 94851</p>
                                                </li>
                                                <!-- List Group Item End -->
                                            </ul>
                                 ");
                WriteLiteral(@"           <!-- List Group End -->
                                        </div>
                                    </div>
                                </div>
                                <!-- User Information End -->
                                <!-- Shared Media Start -->
                                <div class=""chat-info-group"">
                                    <a class=""chat-info-group-header"" data-toggle=""collapse"" href=""#shared-media"" role=""button"" aria-expanded=""true"" aria-controls=""shared-media"">
                                        <h6 class=""mb-0"">Last Media</h6>

                                        <!-- Default :: Inline SVG -->
                                        <svg class=""hw-20 text-muted"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 ");
                WriteLiteral(@"2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                        </svg>

                                        <!-- Alternate :: External File link -->
                                        <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/heroicons/outline/photograph.svg"" alt=""""> -->
                                    </a>

                                    <div class=""chat-info-group-body collapse show"" id=""shared-media"">
                                        <div class=""chat-info-group-content"">
                                            <!-- Shared Media -->
                                            <div class=""form-row"">
                                                <div class=""col-4 col-md-2 col-xl-4"">
                                                    <a href=""#"">
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1342140", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_31);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_38);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </a>
                                                </div>
                                                <div class=""col-4 col-md-2 col-xl-4"">
                                                    <a href=""#"">
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1343731", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_38);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </a>
                                                </div>
                                                <div class=""col-4 col-md-2 col-xl-4"">
                                                    <a href=""#"">
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1345322", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_36);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_38);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- Shared Media End -->
                                <!-- Shared Files Start -->
                                <div class=""chat-info-group"">
                                    <a class=""chat-info-group-header"" data-toggle=""collapse"" href=""#shared-files"" role=""button"" aria-expanded=""true"" aria-controls=""shared-files"">
                                        <h6 class=""mb-0"">Documents</h6>

                                        <!-- Default :: Inline SVG -->
                                        <svg class=""hw-20 text-muted"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                            <path stroke-linecap=""round"" stroke-linejoin");
                WriteLiteral(@"=""round"" stroke-width=""2"" d=""M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"" />
                                        </svg>

                                        <!-- Alternate :: External File link -->
                                        <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/heroicons/outline/document.svg"" alt=""""> -->
                                    </a>

                                    <div class=""chat-info-group-body collapse show"" id=""shared-files"">
                                        <div class=""chat-info-group-content list-item-has-padding"">
                                            <!-- List Group Start -->
                                            <ul class=""list-group list-group-flush"">

                                                <!-- List Group Item Start -->
                                                <li class=""list-group-item"">
                                       ");
                WriteLiteral(@"             <div class=""document"">
                                                        <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/document.svg"" alt=""""> -->
                                                        <");
                WriteLiteral(@"/div>

                                                        <div class=""document-body"">
                                                            <h6 class=""text-truncate"">
                                                                <a href=""#"" class=""text-reset"" title=""effects-of-global-warming.docs"">Effects-of-global-warming.docs</a>
                                                            </h6>

                                                            <ul class=""list-inline small mb-0"">
                                                                <li class=""list-inline-item"">
                                                                    <span class=""text-muted"">79.2 KB</span>
                                                                </li>
                                                                <li class=""list-inline-item"">
                                                                    <span class=""text-muted text-uppercase"">docs</span>
               ");
                WriteLiteral(@"                                                 </li>
                                                            </ul>
                                                        </div>

                                                        <div class=""document-options ml-1"">
                                                            <div class=""dropdown"">
                                                                <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                                    <!-- Default :: Inline SVG -->
                                                                    <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 ");
                WriteLiteral(@"0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                                    </svg>

                                                                    <!-- Alternate :: External File link -->
                                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                                                </button>
                                                                <div class=""dropdown-menu"">
                                                                    <a class=""dropdown-item"" href=""#"">Download</a>
                                                                    <a class=""dropdown-item"" href=""#"">Share</a>
                                                                    <a class=""dropdown-item"" href=""#"">Delete</a>
                                                                </div>
             ");
                WriteLiteral(@"                                               </div>
                                                        </div>
                                                    </div>
                                                </li>
                                                <!-- List Group Item End -->
                                                <!-- List Group Item Start -->
                                                <li class=""list-group-item"">
                                                    <div class=""document"">
                                                        <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-");
                WriteLiteral(@"width=""2"" d=""M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-24"" src=""./~/media/icons/excel-file.svg"" alt=""""> -->
                                                        </div>

                                                        <div class=""document-body"">
                                                            <h6 class=""text-truncate"">
                                                                <a href=""#"" class=""text-reset"" title=""global-warming-data-2020.xlxs"">Global-warming-data-2020.xlxs</a>
                                                            </h6>

                                                            <ul class=""list-inline small mb-0"">
         ");
                WriteLiteral(@"                                                       <li class=""list-inline-item"">
                                                                    <span class=""text-muted"">79.2 KB</span>
                                                                </li>
                                                                <li class=""list-inline-item"">
                                                                    <span class=""text-muted text-uppercase"">xlxs</span>
                                                                </li>
                                                            </ul>
                                                        </div>

                                                        <div class=""document-options ml-1"">
                                                            <div class=""dropdown"">
                                                                <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"" data-toggl");
                WriteLiteral(@"e=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                                    <!-- Default :: Inline SVG -->
                                                                    <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                                    </svg>

                                                                    <!-- Alternate :: External File link -->
                                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                                                </button>
                        ");
                WriteLiteral(@"                                        <div class=""dropdown-menu"">
                                                                    <a class=""dropdown-item"" href=""#"">View</a>
                                                                    <a class=""dropdown-item"" href=""#"">Share</a>
                                                                    <a class=""dropdown-item"" href=""#"">Delete</a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>
                                                <!-- List Group Item End -->
                                                <!-- List Group Item Start -->
                                                <li class=""list-group-item"">
                                                    <div clas");
                WriteLiteral(@"s=""document"">
                                                        <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                            <!-- Default :: Inline SVG -->
                                                            <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"" />
                                                            </svg>

                                                            <!-- Alternate :: External File link -->
                                                            <!-- <img class=""injectable hw-24"" src=""./~/media/icons/powerpoint-file.svg"" alt=""""> -->
                                                        </div>

                  ");
                WriteLiteral(@"                                      <div class=""document-body"">
                                                            <h6 class=""text-truncate"">
                                                                <a href=""#"" class=""text-reset"" title=""great-presentation-on global-warming-2020.ppt"">Great-presentation-on global-warming-2020.ppt</a>
                                                            </h6>

                                                            <ul class=""list-inline small mb-0"">
                                                                <li class=""list-inline-item"">
                                                                    <span class=""text-muted"">79.2 KB</span>
                                                                </li>
                                                                <li class=""list-inline-item"">
                                                                    <span class=""text-muted text-uppercase"">ppt</span>
             ");
                WriteLiteral(@"                                                   </li>
                                                            </ul>
                                                        </div>

                                                        <div class=""document-options ml-1"">
                                                            <div class=""dropdown"">
                                                                <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                                    <!-- Default :: Inline SVG -->
                                                                    <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 ");
                WriteLiteral(@"1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                                    </svg>

                                                                    <!-- Alternate :: External File link -->
                                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                                                </button>
                                                                <div class=""dropdown-menu"">
                                                                    <a class=""dropdown-item"" href=""#"">Download</a>
                                                                    <a class=""dropdown-item"" href=""#"">Share</a>
                                                                    <a class=""dropdown-item"" href=""#"">Delete</a>
                                                                </div>
           ");
                WriteLiteral(@"                                                 </div>
                                                        </div>
                                                    </div>
                                                </li>
                                                <!-- List Group Item End -->
                                            </ul>
                                            <!-- List Group End -->
                                        </div>
                                    </div>
                                </div>
                                <!-- Shared Files End -->

                            </div>
                            <!-- Chat Info Body Start  -->

                        </div>
                    </div>
                    <!-- Chat Info End -->
                </div>


                <!-- Chats Page End -->
                <!-- Call Log Page Start -->
                <div class=""calls px-0 py-2 p-xl-3"">


                    <d");
                WriteLiteral(@"iv class=""container-xl call-list-own-wrap"">
                        <div class=""row"">
                            <div class=""col"">
                                <div class=""card card-bg-1 mb-3"">
                                    <div class=""card-body"">
                                        <div class=""d-flex flex-column align-items-center"">
                                            <div class=""avatar avatar-lg mb-3"">

");
#nullable restore
#line 2785 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                 if (string.IsNullOrEmpty(Model.AccountDetailViewModel.ProfileImg))
                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1364747", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 2788 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                }
                                                else
                                                {


#line default
#line hidden
#nullable disable
                WriteLiteral("                                                    <img class=\"avatar-img\"");
                BeginWriteAttribute("src", " src=\"", 250072, "\"", 250147, 1);
#nullable restore
#line 2792 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
WriteAttributeValue("", 250078, _cloudinaryService.BuildUrl(Model.AccountDetailViewModel.ProfileImg), 250078, 69, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("alt", " alt=\"", 250148, "\"", 250154, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
#nullable restore
#line 2793 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                }

#line default
#line hidden
#nullable disable
                WriteLiteral("                                            </div>\r\n\r\n                                            <div class=\"d-flex flex-column align-items-center\">\r\n                                                <h5 class=\"mb-1\">");
#nullable restore
#line 2797 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                            Write(Model.AccountDetailViewModel.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 2797 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                               Write(Model.AccountDetailViewModel.Surname);

#line default
#line hidden
#nullable disable
                WriteLiteral("</h5>\r\n                                                <p class=\"text-white rounded px-2 bg-primary\">(you) ");
#nullable restore
#line 2798 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                               Write(Model.AccountDetailViewModel.Phone);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class=""card-options"">
                                        <div class=""dropdown"">
                                            <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                </svg>

                                                <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/");
                WriteLiteral(@"dots-vertical.svg"" alt=""""> -->
                                            </button>
                                            <div class=""dropdown-menu dropdown-menu-right"">
                                                <a class=""dropdown-item"" href=""#"">Clear Call Log</a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class=""chat-closer d-xl-none"">
                                        <!-- Chat Back Button (Visible only in Small Devices) -->
                                        <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"" data-close="""">
                                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M10 19l-7-7m0 0l7-7m-7 7h18"" />
        ");
                WriteLiteral(@"                                    </svg>

                                            <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/arrow-left.svg"" alt=""""> -->
                                        </button>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class=""row calls-log"">
                            <div class=""col"">
                                <div class=""card"">
                                    <div class=""card-body"">
                                        <div class=""media"">
                                            <!--svg-->
                                            <div class=""avatar avatar-primary mr-2"">
                                                <span>
                                                    <svg class=""hw-24"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                             ");
                WriteLiteral(@"           <path d=""M17.924 2.617a.997.997 0 00-.215-.322l-.004-.004A.997.997 0 0017 2h-4a1 1 0 100 2h1.586l-3.293 3.293a1 1 0 001.414 1.414L16 5.414V7a1 1 0 102 0V3a.997.997 0 00-.076-.383z"" />
                                                        <path d=""M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"" />
                                                    </svg>

                                                    <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/solid/phone-outgoing.svg"" alt=""""> -->
                                                </span>
                                            </div>

                                            <div class=""media-body"">
                                                <h6>Get Premium Account & Talk to Your Friends Voice and Video Calls</h6>

                                 ");
                WriteLiteral(@"               <div class=""d-flex flex-column flex-sm-row align-items-sm-center align-items-start"">
                                                    <p class=""text-muted mb-0"">In all countries</p><span class=""d-none d-sm-block text-muted mx-2"">•</span>
                                                    <p class=""text-muted mb-0"">24h 7day</p>
                                                </div>
                                            </div>

                                            <div class=""media-options ml-1 d-none d-sm-block"">
                                                <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"">
                                                    <i class=""fas fa-crown text-warning""></i>

");
                WriteLiteral(@"
                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/phone.svg"" alt=""""> -->
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class=""container-xl call-list-selected-account-wrap d-none"">
                        <div class=""row"">
                            <div class=""col"">
                                <div class=""card card-bg-1 mb-3"">
                                    <div class=""card-body"">
                                        <div class=""d-flex flex-column align-items-center"">
                                            <div class=""avatar avatar-lg mb-3"">
                                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1374733", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_39);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                            </div>\r\n\r\n                                            <div class=\"d-flex flex-column align-items-center\">\r\n                                                <input type=\"hidden\" id=\"call-hidden-selected-user-id\"");
                BeginWriteAttribute("value", " value=\"", 257402, "\"", 257410, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                                                <h5 class=""mb-1 call-list-user-fullname""></h5>
                                                <p class=""text-white rounded px-2 bg-primary call-list-user-phone""></p>
                                            </div>

                                            <!--call-->
                                            <div title=""Call"" 
                                                 class=""btn btn-success btn-icon rounded-circle text-light mx-2 voice-call-now"">
                                                <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z""></path>
                         ");
                WriteLiteral(@"                       </svg>

                                                <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/phone.svg"" alt=""""> -->
                                            </div>

                                        </div>
                                    </div>

                                    <div class=""card-options"">
                                        <div class=""dropdown"">
                                            <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
     ");
                WriteLiteral(@"                                           </svg>

                                                <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                            </button>
                                            <div class=""dropdown-menu dropdown-menu-right"">
                                                <a class=""dropdown-item hide-call-selected-user-options"" href=""#"">Hide Options</a>
                                                <a class=""dropdown-item"" href=""#"">Clear Call Log</a>
                                                <a class=""dropdown-item"" href=""#"">Block</a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class=""chat-closer d-xl-none"">
                                        <!-- Chat Back Button (Visible only in Small Devices) -->
                              ");
                WriteLiteral(@"          <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"" data-close="""">
                                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M10 19l-7-7m0 0l7-7m-7 7h18"" />
                                            </svg>

                                            <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/arrow-left.svg"" alt=""""> -->
                                        </button>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class=""row calls-log"">
                            <div class=""col"">
                                <div class=""card"">
                                    <div class=""card-body"">
                       ");
                WriteLiteral(@"                 <div class=""media"">
                                            <!--svg-->
                                            <div class=""avatar avatar-primary mr-2"">
                                                <span>
                                                    <svg class=""hw-24"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                        <path d=""M17.924 2.617a.997.997 0 00-.215-.322l-.004-.004A.997.997 0 0017 2h-4a1 1 0 100 2h1.586l-3.293 3.293a1 1 0 001.414 1.414L16 5.414V7a1 1 0 102 0V3a.997.997 0 00-.076-.383z"" />
                                                        <path d=""M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"" />
                                                    </svg>

                                                    <!-- <img class=""injectable hw-24"" src=""./~/");
                WriteLiteral(@"media/heroicons/solid/phone-outgoing.svg"" alt=""""> -->
                                                </span>
                                            </div>

                                            <div class=""media-body"">
                                                <h6>Get Premium Account & Talk to Your Friends Voice and Video Calls</h6>

                                                <div class=""d-flex flex-column flex-sm-row align-items-sm-center align-items-start"">
                                                    <p class=""text-muted mb-0"">In all countries</p><span class=""d-none d-sm-block text-muted mx-2"">•</span>
                                                    <p class=""text-muted mb-0"">24h 7day</p>
                                                </div>
                                            </div>

                                            <div class=""media-options ml-1 d-none d-sm-block"">
                                                <button class=""btn btn-se");
                WriteLiteral("condary btn-icon btn-minimal btn-sm text-muted\" type=\"button\">\r\n                                                    <i class=\"fas fa-crown text-warning\"></i>\r\n\r\n");
                WriteLiteral(@"
                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/phone.svg"" alt=""""> -->
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Call Log Page End -->
                <!-- Friends Page Start -->
                <div class=""friends px-0 py-2 p-xl-3"">
                    <!--nice to see you-->
                    <div class=""friends-intro-wrapper d-flex flex-column justify-content-center text-center h-100 w-100"">
                        <div class=""container"">
                            <div class=""avatar avatar-lg mb-2"">
");
#nullable restore
#line 2989 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                 if (Model.AccountDetailViewModel.ProfileImg == null)
                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1384435", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 2992 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                }
                                else
                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                    <img class=\"avatar-img\"");
                BeginWriteAttribute("src", " src=\"", 265564, "\"", 265639, 1);
#nullable restore
#line 2995 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
WriteAttributeValue("", 265570, _cloudinaryService.BuildUrl(Model.AccountDetailViewModel.ProfileImg), 265570, 69, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("alt", " alt=\"", 265640, "\"", 265646, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
#nullable restore
#line 2996 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                }

#line default
#line hidden
#nullable disable
                WriteLiteral("                            </div>\r\n\r\n                            <h5>Nice to see you, ");
#nullable restore
#line 2999 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                            Write(Model.AccountDetailViewModel.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"!</h5>
                            <p class=""text-muted friends-intro-text"">Click on the account you want to see profile information.</p>
                        </div>
                    </div>

                    <!--Selected Account's Details-->
                    <div class=""selected-account-details container-xl friend-details-container d-none"">
                        <div class=""row"">
                            <div class=""col"">
                                <div class=""card card-body card-bg-1 mb-3"">
                                    <div class=""d-flex flex-column align-items-center"">
                                        <!--selected account's profile img-->
                                        <div class=""avatar avatar-lg mb-3"">
                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1388033", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_40);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                        </div>

                                        <div class=""d-flex flex-column align-items-center"">
                                            <!--account's fullname-->
                                            <input type=""hidden"" id=""hidden-selected-account-id""");
                BeginWriteAttribute("value", " value=\"", 267036, "\"", 267044, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                                            <!--account's fullname-->
                                            <h5 class=""mb-1 selected-account-details-fullname""></h5>
                                            <!--account's status text-->
                                            <p class=""text-white rounded px-2 bg-info selected-account-details-statusText""></p>
                                            <!--Buttons-->
                                            <div class=""d-flex mt-2 account-proccess-wrapper"">
                                                <!--Accept friend request-->
                                                <div title=""Accept Friend Request""
                                                     class=""btn btn-accept-friend-request d-none btn-success btn-icon rounded-circle text-light mx-2"">
                                                    <i class=""fas fa-user-check""></i>
                                                    <!-- <img class=""injectable hw-24""");
                WriteLiteral(@" src=""./~/media/heroicons/outline/chat.svg"" alt=""""> -->
                                                </div>
                                                <!--Reject friend request-->
                                                <div title=""Reject Friend Request""
                                                     class=""btn btn-reject-friend-request d-none btn-danger btn-icon rounded-circle text-light mx-2"">
                                                    <i class=""fas fa-user-slash""></i>
                                                    <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/chat.svg"" alt=""""> -->
                                                </div>
                                                <!--send friend request-->
                                                <div title=""Send Friend Request""
                                                     class=""btn btn-primary btn-send-friend-request d-none btn-icon rounded-circle text-light mx-2"">
    ");
                WriteLiteral(@"                                                <i class=""fas fa-user-plus""></i>
                                                    <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/chat.svg"" alt=""""> -->
                                                </div>
                                                <!--send message-->
                                                <div title=""Send Message""
                                                     class=""btn btn-primary btn-icon rounded-circle text-light mx-2"">
                                                    <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"" />
                                                    </svg>
 ");
                WriteLiteral(@"                                                   <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/chat.svg"" alt=""""> -->
                                                </div>
                                                <!--call-->
                                                <div title=""Call"" 
                                                     class=""btn btn-success btn-icon rounded-circle text-light mx-2 voice-call-now"">
                                                    <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"" />
                                                    </svg>

                          ");
                WriteLiteral(@"                          <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/phone.svg"" alt=""""> -->
                                                </div>
                                                <!--remove friend-->
                                                <div title=""Remove from Friend List""
                                                     class=""btn btn-remove-friend d-none btn-danger btn-icon rounded-circle text-light mx-2"">
                                                    <i class=""fas fa-user-times""></i>
                                                    <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/chat.svg"" alt=""""> -->
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                    <!--card setting options-->
                                    <div class=""card-o");
                WriteLiteral(@"ptions"">
                                        <div class=""dropdown"">
                                            <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                </svg>

                                                <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                            </button>
                                            <div class=""dropdown-menu"">
                                              ");
                WriteLiteral(@"  <a class=""dropdown-item hide-selected-account-details"" href=""#"">Hide account details</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""chat-closer d-xl-none"">
                                        <!-- Chat Back Button (Visible only in Small Devices) -->
                                        <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted"" type=""button"" data-close="""">
                                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M10 19l-7-7m0 0l7-7m-7 7h18"" />
                                            </svg>

                                            <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/arrow-left.svg"" alt=""""> -->
     ");
                WriteLiteral(@"                                   </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--Select Account's Details-->
                        <div class=""row friends-info"">
                            <div class=""col"">
                                <div class=""card"">
                                    <ul class=""list-group list-group-flush"">
                                        <!--???-->
");
                WriteLiteral(@"                                        <li class=""list-group-item"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""small text-muted mb-0"">Birthdate</p>
                                                    <p class=""mb-0 selected-account-details-birthday""></p>
                                                </div>
                                                <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                                </svg>

                                                <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/heroicons/outl");
                WriteLiteral(@"ine/calendar.svg"" alt=""""> -->
                                            </div>
                                        </li>
                                        <li class=""list-group-item"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""small text-muted mb-0"">Phone</p>
                                                    <p class=""mb-0 selected-account-details-phone""></p>
                                                </div>
                                                <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.4");
                WriteLiteral(@"98a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"" />
                                                </svg>
                                                <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/heroicons/outline/phone.svg"" alt=""""> -->
                                            </div>
                                        </li>
                                        <li class=""list-group-item"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""small text-muted mb-0"">Email</p>
                                                    <p class=""mb-0 selected-account-details-email""></p>
                                                </div>
                                                <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                              ");
                WriteLiteral(@"                      <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"" />
                                                </svg>
                                                <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/heroicons/outline/mail.svg"" alt=""""> -->
                                            </div>
                                        </li>
                                        <li class=""list-group-item"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""small text-muted mb-0"">Website</p>
                                                    <p class=""mb-0 selected-account-details-website""></p>
                                                </div>
                             ");
                WriteLiteral(@"                   <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                </svg>
                                                <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/heroicons/outline/globe.svg"" alt=""""> -->
                                            </div>
                                        </li>
                                        <li class=""list-group-item"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p cla");
                WriteLiteral(@"ss=""small text-muted mb-0"">Address</p>
                                                    <p class=""mb-0 selected-account-details-address""></p>
                                                </div>
                                                <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"" />
                                                </svg>
                                                <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/heroicons/outline/home.svg"" alt=""""> -->
                                            </div>
                                        </li>
                                    </ul>
                                </div>

                      ");
                WriteLiteral(@"          <!--Selected Account's Social Links-->
                                <div class=""card"">
                                    <ul class=""list-group list-group-flush"">
                                        <li class=""list-group-item"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""small text-muted mb-0"">Facebook</p>
                                                    <a class=""font-size-sm font-weight-medium selected-account-social-facebook"" href=""#""></a>
                                                </div>
                                                <svg class=""text-muted hw-20"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"">
                                                    <path d=""M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 ");
                WriteLiteral(@"1-1h3z"" />
                                                </svg>
                                                <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/icons/facebook.svg"" alt=""""> -->
                                            </div>
                                        </li>
                                        <li class=""list-group-item"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""small text-muted mb-0"">Twitter</p>
                                                    <a class=""font-size-sm font-weight-medium selected-account-social-twitter"" href=""#""></a>
                                                </div>
                                                <svg class=""text-muted hw-20"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""ro");
                WriteLiteral(@"und"">
                                                    <path d=""M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"" />
                                                </svg>
                                                <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/icons/twitter.svg"" alt=""""> -->
                                            </div>
                                        </li>
                                        <li class=""list-group-item"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""small text-muted mb-0"">Instagram</p>
                                                    <a class=""font-size-sm font-weight-medium selected-account-social-instagram"" href=""#""></a>
           ");
                WriteLiteral(@"                                     </div>
                                                <svg class=""text-muted hw-20"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"">
                                                    <rect x=""2"" y=""2"" width=""20"" height=""20"" rx=""5"" ry=""5"" />
                                                    <path d=""M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"" />
                                                    <line x1=""17.5"" y1=""6.5"" x2=""17.51"" y2=""6.5"" />
                                                </svg>
                                                <!-- <img class=""injectable text-muted hw-20"" src=""./~/media/icons/instagram.svg"" alt=""""> -->
                                            </div>
                                        </li>
                                        <li class=""list-group-item"">
                                            <div class=""media align-items-center"">
   ");
                WriteLiteral(@"                                             <div class=""media-body"">
                                                    <p class=""small text-muted mb-0"">Linkedin</p>
                                                    <a class=""font-size-sm font-weight-medium selected-account-social-linkedin"" href=""#""></a>
                                                </div>
                                                <svg class=""text-muted hw-20"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"">
                                                    <path d=""M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"" />
                                                    <rect x=""2"" y=""9"" width=""4"" height=""12"" />
                                                    <circle cx=""4"" cy=""4"" r=""2"" />
                                                </svg>
                                                <!-- <img class=""injectable ");
                WriteLiteral(@"text-muted hw-20"" src=""./~/media/icons/linkedin.svg"" alt=""""> -->
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <!-- Friends Page End -->
                <!-- Profile Settings Start -->
                <div class=""profile"">
                    <div class=""page-main-heading sticky-top py-2 px-3 mb-3"">

                        <!-- Chat Back Button (Visible only in Small Devices) -->
                        <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted d-xl-none"" type=""button"" data-close="""">
                            <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M10 19l-7-7m0 ");
                WriteLiteral(@"0l7-7m-7 7h18"" />
                            </svg>
                            <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/arrow-left.svg"" alt=""""> -->
                        </button>

                        <div class=""pl-2 pl-xl-0"">
                            <h5 class=""font-weight-semibold"">Settings</h5>
                            <p class=""text-muted mb-0"">Update Personal Information &amp; Settings</p>
                        </div>
                    </div>

                    <div class=""container-xl px-2 px-sm-3"">
                        <div class=""row"">
                            <div class=""col"">
                                <!--Account Information-->
                                <div class=""card mb-3"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1411868", async() => {
                    WriteLiteral("\r\n\r\n                                        <input type=\"hidden\" id=\"hidden-account-id\"");
                    BeginWriteAttribute("value", " value=\"", 288970, "\"", 289010, 1);
#nullable restore
#line 3266 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
WriteAttributeValue("", 288978, Model.AccountDetailViewModel.Id, 288978, 32, false);

#line default
#line hidden
#nullable disable
                    EndWriteAttribute();
                    WriteLiteral(@" />

                                        <div class=""card-header"">
                                            <h6 class=""mb-1"">Account</h6>
                                            <p class=""mb-0 text-muted small"">Update personal &amp; contact information</p>
                                        </div>

                                        <div class=""card-body"">
                                            <div class=""row"">
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1413315", async() => {
                        WriteLiteral("First Name");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3277 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Name);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1414984", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3278 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Name);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_42);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1416779", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3279 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Name);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_43);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1418833", async() => {
                        WriteLiteral("Last Name");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3284 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Surname);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1420504", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3285 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Surname);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_44);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1422302", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3286 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Surname);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_43);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1424359", async() => {
                        WriteLiteral("Mobile number");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3291 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Phone);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1426032", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3292 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Phone);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_45);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1427828", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3293 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Phone);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_43);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1429883", async() => {
                        WriteLiteral("Birth date");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3298 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Birthday);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1431556", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3299 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Birthday);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_46.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_46);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_47);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_48);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_49);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_50);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1434041", async() => {
                        WriteLiteral("Email address");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3304 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Email);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1435714", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3305 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Email);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_51);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1437786", async() => {
                        WriteLiteral("Website");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3310 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Website);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1439455", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3311 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Website);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_52);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1441520", async() => {
                        WriteLiteral("Address");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3316 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Address);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1443189", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3317 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDetailViewModel.Address);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_53);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                        <div class=""card-footer d-flex justify-content-end"">
                                            <button type=""button"" class=""btn btn-link text-muted mx-1"">Reset</button>
                                            <button type=""submit"" class=""btn btn-primary onchangesubmit "" disabled>Save Changes</button>
                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_28.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_28);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_54);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_26.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_26);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_55.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_55);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n                                </div>\r\n                                <!--Account Social Links-->\r\n                                <div class=\"card mb-3\">\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1447552", async() => {
                    WriteLiteral(@"
                                        <div class=""card-header"">
                                            <h6 class=""mb-1"">Social network profiles</h6>
                                            <p class=""mb-0 text-muted small"">Update personal &amp; contact information</p>
                                        </div>

                                        <div class=""card-body"">
                                            <div class=""row"">
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1448506", async() => {
                        WriteLiteral("Facebook");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3343 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Facebook);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1450181", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3344 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Facebook);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_56);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_57);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1451984", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3345 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Facebook);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_58);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1454046", async() => {
                        WriteLiteral("Twitter");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3350 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Twitter);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1455719", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3351 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Twitter);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_56);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_57);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1457521", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3352 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Twitter);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_43);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1459582", async() => {
                        WriteLiteral("Instagram");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3357 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Instagram);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1461259", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3358 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Instagram);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_56);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_57);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1463063", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3359 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Instagram);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_43);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1465126", async() => {
                        WriteLiteral("Linkedin");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3364 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Linkedin);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1466801", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3365 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Linkedin);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_56);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_57);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1468604", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3366 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountSocialLinkViewModel.Linkedin);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_43);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class=""card-footer d-flex justify-content-end"">
                                            <button type=""button"" class=""btn btn-link text-muted mx-1"">Reset</button>
                                            <button type=""submit"" class=""btn btn-primary onchangesocial"" disabled>Save Changes</button>
                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_28.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_28);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_59);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_26.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_26);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_60.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_60);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n                                </div>\r\n                                <!--Update Password-->\r\n                                <div class=\"card mb-3\">\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1472947", async() => {
                    WriteLiteral(@"
                                        <div class=""card-header"">
                                            <h6 class=""mb-1"">Password</h6>
                                            <p class=""mb-0 text-muted small"">Update personal account password</p>
                                        </div>

                                        <div class=""card-body"">

                                            <div class=""row"">
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1473879", async() => {
                        WriteLiteral("Current Password");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3392 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.UpdatePasswordViewModel.CurrentPassword);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1475566", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3393 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.UpdatePasswordViewModel.CurrentPassword);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_61);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_62);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1477373", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3394 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.UpdatePasswordViewModel.CurrentPassword);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_63);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1479556", async() => {
                        WriteLiteral("New Password");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3401 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.UpdatePasswordViewModel.Password);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1481232", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3402 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.UpdatePasswordViewModel.Password);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_64);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_65);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1483032", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3403 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.UpdatePasswordViewModel.Password);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_58);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6 col-12"">
                                                    <div class=""form-group"">
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1485091", async() => {
                        WriteLiteral("Repeat Password");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 3408 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.UpdatePasswordViewModel.PasswordConfirm);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1486777", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 3409 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.UpdatePasswordViewModel.PasswordConfirm);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_64);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_66);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1488584", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 3410 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.UpdatePasswordViewModel.PasswordConfirm);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_58);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        <div class=""card-footer d-flex justify-content-end"">
                                            <button type=""button"" class=""btn btn-link text-muted mx-1"">Reset</button>
                                            <button type=""submit"" class=""btn btn-primary changepassword"" disabled>Save Changes</button>
                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_28.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_28);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_67);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_19.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_68.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_68);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n                                </div>\r\n                                <!--Account Privacy-->\r\n                                <div class=\"card mb-3\">\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1492933", async() => {
                    WriteLiteral(@"

                                        <div class=""card-header"">
                                            <h6 class=""mb-1"">Privacy</h6>
                                            <p class=""mb-0 text-muted small"">Update personal account privacy</p>
                                        </div>
                                        <div class=""card-body p-0"">
                                            <ul class=""list-group list-group-flush list-group-sm-column"">

                                                <!--privacy profile img-->
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
                                                        <div class=""media-body"">
                                                            <p class=""mb-0"">Profile Picture</p>
                                                            <p class=""small text-muted mb-0"">Select who can ");
                    WriteLiteral(@"see your profile picture</p>
                                                        </div>
                                                        <div class=""dropdown mr-2"">
                                                            <button class=""btn btn-outline-default dropdown-toggle""
                                                                    data-privacy-profile-picture-text="""" type=""button""
                                                                    data-selected-value=""");
#nullable restore
#line 3445 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                    Write(Model.AccountPrivacyViewModel.ProfileImg);

#line default
#line hidden
#nullable disable
                    WriteLiteral("\"\r\n                                                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                ");
#nullable restore
#line 3447 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                            Write(Model.AccountPrivacyViewModel.ProfileImg ? "Public " : "Friends");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@"
                                                            </button>
                                                            <div class=""dropdown-menu dropdown-menu-right"">
                                                                <a class=""dropdown-item"" data-privacy-profile-picture data-privacy-value=""true"" href=""#"">Public </a>
                                                                <a class=""dropdown-item"" data-privacy-profile-picture data-privacy-value=""false"" href=""#"">Friends</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>
                                                <!--privacy status-->
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
                ");
                    WriteLiteral(@"                                        <div class=""media-body"">
                                                            <p class=""mb-0"">Status</p>
                                                            <p class=""small text-muted mb-0"">Select who can see your status updates</p>
                                                        </div>
                                                        <div class=""dropdown mr-2"">
                                                            <button class=""btn btn-outline-default dropdown-toggle""
                                                                    data-privacy-status-text="""" type=""button""
                                                                    data-selected-value=""");
#nullable restore
#line 3466 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                    Write(Model.AccountPrivacyViewModel.StatusText);

#line default
#line hidden
#nullable disable
                    WriteLiteral("\"\r\n                                                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                ");
#nullable restore
#line 3468 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                            Write(Model.AccountPrivacyViewModel.StatusText ? "Public " : "Friends");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@"
                                                            </button>
                                                            <div class=""dropdown-menu dropdown-menu-right"">
                                                                <a class=""dropdown-item"" data-privacy-status data-privacy-value=""true"" href=""#"">Public </a>
                                                                <a class=""dropdown-item"" data-privacy-status data-privacy-value=""false"" href=""#"">Friends</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>
                                                <!--privacy last seen-->
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
                               ");
                    WriteLiteral(@"                         <div class=""media-body"">
                                                            <p class=""mb-0"">Last Seen</p>
                                                            <p class=""small text-muted mb-0"">Select who can see your last seen</p>
                                                        </div>
                                                        <div class=""dropdown mr-2"">
                                                            <button class=""btn btn-outline-default dropdown-toggle""
                                                                    data-privacy-last-seen-text="""" type=""button""
                                                                    data-selected-value=""");
#nullable restore
#line 3487 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                    Write(Model.AccountPrivacyViewModel.LastSeen);

#line default
#line hidden
#nullable disable
                    WriteLiteral("\"\r\n                                                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                ");
#nullable restore
#line 3489 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                            Write(Model.AccountPrivacyViewModel.LastSeen ? "Public " : "Friends");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@"
                                                            </button>
                                                            <div class=""dropdown-menu dropdown-menu-right"">
                                                                <a class=""dropdown-item"" data-privacy-last-seen data-privacy-value=""true"" href=""#"">Public </a>
                                                                <a class=""dropdown-item"" data-privacy-last-seen data-privacy-value=""false"" href=""#"">Friends</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>
                                                <!--privacy phone-->
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
                             ");
                    WriteLiteral(@"                           <div class=""media-body"">
                                                            <p class=""mb-0"">Phone</p>
                                                            <p class=""small text-muted mb-0"">Select who can see your phone number</p>
                                                        </div>
                                                        <div class=""dropdown mr-2"">
                                                            <button class=""btn btn-outline-default dropdown-toggle""
                                                                    data-privacy-phone-text="""" type=""button""
                                                                    data-selected-value=""");
#nullable restore
#line 3508 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                    Write(Model.AccountPrivacyViewModel.Phone);

#line default
#line hidden
#nullable disable
                    WriteLiteral("\"\r\n                                                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                ");
#nullable restore
#line 3510 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                            Write(Model.AccountPrivacyViewModel.Phone ? "Public " : "Friends");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@"
                                                            </button>
                                                            <div class=""dropdown-menu dropdown-menu-right"">
                                                                <a class=""dropdown-item"" data-privacy-phone data-privacy-value=""true"" href=""#"">Public </a>
                                                                <a class=""dropdown-item"" data-privacy-phone data-privacy-value=""false"" href=""#"">Friends</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>
                                                <!--privacy birthday-->
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
                                  ");
                    WriteLiteral(@"                      <div class=""media-body"">
                                                            <p class=""mb-0"">Birthday</p>
                                                            <p class=""small text-muted mb-0"">Select who can see your birthday</p>
                                                        </div>
                                                        <div class=""dropdown mr-2"">
                                                            <button class=""btn btn-outline-default dropdown-toggle""
                                                                    data-privacy-birthday-text="""" type=""button""
                                                                    data-selected-value=""");
#nullable restore
#line 3529 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                    Write(Model.AccountPrivacyViewModel.Birthday);

#line default
#line hidden
#nullable disable
                    WriteLiteral("\"\r\n                                                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                ");
#nullable restore
#line 3531 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                            Write(Model.AccountPrivacyViewModel.Birthday ? "Public " : "Friends");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@"
                                                            </button>
                                                            <div class=""dropdown-menu dropdown-menu-right"">
                                                                <a class=""dropdown-item"" data-privacy-birthday data-privacy-value=""true"" href=""#"">Public </a>
                                                                <a class=""dropdown-item"" data-privacy-birthday data-privacy-value=""false"" href=""#"">Friends</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>
                                                <!--privacy address-->
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
                             ");
                    WriteLiteral(@"                           <div class=""media-body"">
                                                            <p class=""mb-0"">Address</p>
                                                            <p class=""small text-muted mb-0"">Select who can see your address</p>
                                                        </div>
                                                        <div class=""dropdown mr-2"">
                                                            <button class=""btn btn-outline-default dropdown-toggle""
                                                                    data-privacy-address-text="""" type=""button""
                                                                    data-selected-value=""");
#nullable restore
#line 3550 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                    Write(Model.AccountPrivacyViewModel.Address);

#line default
#line hidden
#nullable disable
                    WriteLiteral("\"\r\n                                                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                ");
#nullable restore
#line 3552 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                            Write(Model.AccountPrivacyViewModel.Address ? "Public " : "Friends");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@"
                                                            </button>
                                                            <div class=""dropdown-menu dropdown-menu-right"">
                                                                <a class=""dropdown-item"" data-privacy-address data-privacy-value=""true"" href=""#"">Public </a>
                                                                <a class=""dropdown-item"" data-privacy-address data-privacy-value=""false"" href=""#"">Friends</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>
                                                <!--privacy social links-->
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
                          ");
                    WriteLiteral(@"                              <div class=""media-body"">
                                                            <p class=""mb-0"">Social network links</p>
                                                            <p class=""small text-muted mb-0"">Select who can see your social network links</p>
                                                        </div>
                                                        <div class=""dropdown mr-2"">
                                                            <button class=""btn btn-outline-default dropdown-toggle""
                                                                    data-privacy-social-links-text="""" type=""button""
                                                                    data-selected-value=""");
#nullable restore
#line 3571 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                    Write(Model.AccountPrivacyViewModel.SocialLink);

#line default
#line hidden
#nullable disable
                    WriteLiteral("\"\r\n                                                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                ");
#nullable restore
#line 3573 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                            Write(Model.AccountPrivacyViewModel.SocialLink ? "Public " : "Friends");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@"
                                                            </button>
                                                            <div class=""dropdown-menu dropdown-menu-right"">
                                                                <a class=""dropdown-item"" data-privacy-social-links data-privacy-value=""true"" href=""#"">Public </a>
                                                                <a class=""dropdown-item"" data-privacy-social-links data-privacy-value=""false"" href=""#"">Friends</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>

                                                <!--privacy accept all messages-->
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
       ");
                    WriteLiteral(@"                                                 <div class=""media-body"">
                                                            <p class=""mb-0"">Accept all messages</p>
                                                            <p class=""small text-muted mb-0"">If turn off this option, only accounts that are friends with you can send you messages</p>
                                                        </div>
                                                        <div class=""custom-control custom-switch mr-2"">
                                                            <input type=""checkbox"" class=""custom-control-input"" id=""privacy-accept-messages""
                                                                   ");
#nullable restore
#line 3592 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                               Write(Model.AccountPrivacyViewModel.AcceptAllMessages ? "checked" : "");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@">
                                                            <label class=""custom-control-label"" for=""privacy-accept-messages"">&nbsp;</label>
                                                        </div>
                                                    </div>
                                                </li>

                                            </ul>
                                        </div>

                                        <div class=""card-footer d-flex justify-content-end"">
                                            <button type=""button"" class=""btn btn-link text-muted mx-1"">Reset</button>
                                            <button type=""submit"" class=""btn btn-primary changeprivacy"" disabled>Save Changes</button>
                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_28.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_28);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_69);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_26.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_26);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_70.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_70);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                </div>\r\n                                <!--Account Security-->\r\n                                <div class=\"card mb-3\">\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1516900", async() => {
                    WriteLiteral(@"

                                        <div class=""card-header"">
                                            <h6 class=""mb-1"">Security</h6>
                                            <p class=""mb-0 text-muted small"">Update security personal account information</p>
                                        </div>

                                        <div class=""card-body p-0"">
                                            <ul class=""list-group list-group-flush list-group-sm-column"">
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
                                                        <div class=""media-body"">
                                                            <p class=""mb-0"">Use two-factor authentication</p>
                                                            <p class=""small text-muted mb-0"">Ask for a code if attempted login from an unrecognised device o");
                    WriteLiteral(@"r browser.</p>
                                                        </div>
                                                        <div class=""custom-control custom-switch mr-2"">
                                                            <input type=""checkbox"" class=""custom-control-input"" id=""security-tfa""
                                                                   ");
#nullable restore
#line 3626 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                               Write(Model.AccountSecurityViewModel.TwoFactoryAuth ? "checked" : "");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@">
                                                            <label class=""custom-control-label"" for=""security-tfa"">&nbsp;</label>
                                                        </div>
                                                    </div>
                                                </li>
                                                <li class=""list-group-item py-2"">
                                                    <div class=""media align-items-center"">
                                                        <div class=""media-body"">
                                                            <p class=""mb-0"">Get alerts about unrecognised logins</p>
                                                            <p class=""small text-muted mb-0"">You will be notified if anyone logs in from a device or browser you don't usually use</p>
                                                        </div>
                                                        <div class=""custom-control custo");
                    WriteLiteral("m-switch mr-2\">\r\n                                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"security-login-alerts\"\r\n                                                                   ");
#nullable restore
#line 3639 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                               Write(Model.AccountSecurityViewModel.LoginAlerts ? "checked" : "");

#line default
#line hidden
#nullable disable
                    WriteLiteral(@">
                                                            <label class=""custom-control-label"" for=""security-login-alerts"">&nbsp;</label>
                                                        </div>
                                                    </div>
                                                </li>

                                            </ul>
                                        </div>

                                        <div class=""card-footer d-flex justify-content-end"">
                                            <button class=""btn btn-link text-muted mx-1"">Reset</button>
                                            <button class=""btn btn-primary changesecurity"" type=""submit"" disabled>Save Changes</button>
                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_28.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_28);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_71);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_26.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_26);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_72.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_72);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Profile Settings End -->

            </main>
            <!-- Main End -->
            <!-- All Modals Start -->
            <!-- Modal 1 :: Start a Conversation-->
            <div class=""modal modal-lg-fullscreen fade"" id=""startConversation"" tabindex=""-1"" role=""dialog"" aria-labelledby=""startConversationLabel"" aria-hidden=""true"">
                <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"">
                    <div class=""modal-content"">
                        <div class=""modal-header"">
                            <h5 class=""modal-title"" id=""startConversationLabel"">New Chat</h5>
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </butto");
                WriteLiteral(@"n>
                        </div>
                        <div class=""modal-body p-0 hide-scrollbar"">
                            <div class=""row"">
                                <div class=""col-12"">
                                    <!-- Search Start -->
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1524610", async() => {
                    WriteLiteral(@"
                                        <div class=""input-group w-100 bg-light"">
                                            <input id=""search-friends-input"" type=""text"" class=""form-control form-control-md search border-right-0 transparent-bg pr-0"" placeholder=""Search..."">
                                            <input id=""hidden-friend-search-id"" type=""hidden"" />
                                            <div class=""input-group-append"">
                                                <div class=""input-group-text transparent-bg border-left-0"" role=""button"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                                    </svg>");
                    WriteLiteral(@"

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/search.svg"" alt=""""> -->
                                                </div>
                                            </div>
                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_73);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    <!-- Search End -->
                                </div>

                                <div class=""col-12"">
                                    <!--test autocomplete results-->
                                    <input type=""hidden"" id=""hidden-search-friends-result-count"" value=""0"" />
                                    <ul id=""search-friend-accounts-results"" class=""list-group list-group-flush""></ul>

                                    <!-- List Group Start -->
                                    <ul id=""search-friend-accounts-wrapper"" class=""list-group list-group-flush"">

                                        <!-- Friends List Start -->
");
#nullable restore
#line 3706 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                         foreach (var item in Model.AccountViewModels)
                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                            <li class=\"list-group-item\">\r\n                                                <div class=\"media\">\r\n                                                    <div class=\"avatar avatar-online mr-2\">\r\n");
#nullable restore
#line 3711 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                         if (item.ProfileImg == null)
                                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1529212", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_74);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 3714 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                        }
                                                        else
                                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                            <img");
                BeginWriteAttribute("src", " src=\"", 328347, "\"", 328398, 1);
#nullable restore
#line 3717 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
WriteAttributeValue("", 328353, _cloudinaryService.BuildUrl(item.ProfileImg), 328353, 45, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                BeginWriteAttribute("alt", " alt=\"", 328399, "\"", 328450, 1);
#nullable restore
#line 3717 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
WriteAttributeValue("", 328405, _cloudinaryService.BuildUrl(item.ProfileImg), 328405, 45, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">\r\n");
#nullable restore
#line 3718 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                        }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                    </div>

                                                    <div class=""media-body"">
                                                        <h6 class=""text-truncate"">
                                                            <a href=""#"" class=""text-reset"">");
#nullable restore
#line 3724 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                                                                      Write(item.Fullname);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</a>
                                                        </h6>

                                                        <p class=""text-muted mb-0"">Online</p>
                                                    </div>
                                                </div>
                                            </li>
");
#nullable restore
#line 3731 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                        }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                        <!-- List Group Item End -->




                                    </ul>
                                    <!-- List Group End -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal 2 :: Create Group -->
            <div class=""modal modal-lg-fullscreen fade"" id=""createGroup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""createGroupLabel"" aria-hidden=""true"">
                <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"">
                    <div class=""modal-content"">
                        <div class=""modal-header"">
                            <h5 class=""modal-title js-title-step"" id=""createGroupLabel"">&nbsp;</h5>
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">");
                WriteLiteral(@"&times;</span>
                            </button>
                        </div>
                        <div class=""modal-body py-0 hide-scrollbar"">
                            <div class=""row hide pt-2 "" data-step=""1"" data-title=""Create a New Group"">

                                <div class=""col-12"">
                                    <div class=""form-group"">
                                        <label for=""groupName"">Group name</label>
                                        <input type=""text"" class=""form-control form-control-md"" id=""groupName"" placeholder=""Type group name here"">
                                    </div>
                                </div>
                                <div class=""col-12"">
                                    <div class=""form-group"">
                                        <label>Choose profile picture</label>
                                        <div class=""custom-file"">
                                            <input type=""file"" class");
                WriteLiteral(@"=""custom-file-input"" id=""profilePictureInput"" accept=""image/*"">
                                            <label class=""custom-file-label"" for=""profilePictureInput"">Choose file</label>
                                        </div>
                                    </div>
                                </div>

                                <div class=""col-12"">
                                    <div class=""row"">
                                        <div class=""col-12"">
                                            <div class=""form-group mb-0"">
                                                <label>Group privacy</label>
                                            </div>
                                        </div>
                                        <div class=""col"">
                                            <div class=""form-group rounded p-2 border"">
                                                <div class=""custom-control custom-radio"">
                                      ");
                WriteLiteral(@"              <input class=""form-check-input"" type=""radio"" name=""exampleRadios"" id=""exampleRadios1"" value=""option1"" checked>
                                                    <label class=""form-check-label"" for=""exampleRadios1"">
                                                        Public group
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""col"">
                                            <div class=""form-group rounded p-2 border"">
                                                <div class=""custom-control custom-radio"">
                                                    <input class=""form-check-input"" type=""radio"" name=""exampleRadios"" id=""exampleRadios2"" value=""option2"">
                                                    <label class=""form-check-label"" for=""exampleRadios2"">
 ");
                WriteLiteral(@"                                                       Private group
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class=""row hide pt-2 "" data-step=""2"" data-title=""Add Group Members"">
                                <div class=""col-12 px-0"">
                                    <!-- Search Start -->
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1538079", async() => {
                    WriteLiteral(@"
                                        <div class=""input-group w-100 bg-light"">
                                            <input type=""text"" class=""form-control form-control-md search border-right-0 transparent-bg pr-0"" placeholder=""Search..."">
                                            <div class=""input-group-append"">
                                                <div class=""input-group-text transparent-bg border-left-0"" role=""button"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                          ");
                    WriteLiteral(@"                          <!-- <img class=""injectable hw-20"" src=""./~/media/heroicons/outline/search.svg"" alt=""""> -->
                                                </div>
                                            </div>
                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_75);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    <!-- Search End -->
                                </div>

                                <div class=""col-12 px-0"">
                                    <!-- List Group Start -->
                                    <ul class=""list-group list-group-flush"">

                                        <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""avatar avatar-online mr-2"">
                                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1541530", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_76);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                </div>

                                                <div class=""media-body"">
                                                    <h6 class=""text-truncate"">
                                                        <a href=""#"" class=""text-reset"">Catherine Richardson</a>
                                                    </h6>

                                                    <p class=""text-muted mb-0"">Online</p>
                                                </div>

                                                <div class=""media-options"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 336892, "\"", 336900, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"chx-user-1\"");
                BeginWriteAttribute("checked", " checked=\"", 336917, "\"", 336927, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                        <label class=""custom-control-label"" for=""chx-user-1""></label>
                                                    </div>
                                                </div>
                                            </div>
                                            <label class=""media-label"" for=""chx-user-1""></label>
                                        </li>
                                        <!-- List Group Item End -->
                                        <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""avatar avatar-online mr-2"">
                                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1544747", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                </div>

                                                <div class=""media-body"">
                                                    <h6 class=""text-truncate"">
                                                        <a href=""#"" class=""text-reset"">Katherine Schneider</a>
                                                    </h6>

                                                    <p class=""text-muted mb-0"">Online</p>
                                                </div>

                                                <div class=""media-options"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 338638, "\"", 338646, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"chx-user-2\"");
                BeginWriteAttribute("checked", " checked=\"", 338663, "\"", 338673, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                        <label class=""custom-control-label"" for=""chx-user-2""></label>
                                                    </div>
                                                </div>
                                            </div>
                                            <label class=""media-label"" for=""chx-user-2""></label>
                                        </li>
                                        <!-- List Group Item End -->
                                        <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""avatar avatar-offline mr-2"">
                                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1547963", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                </div>

                                                <div class=""media-body"">
                                                    <h6 class=""text-truncate"">
                                                        <a href=""#"" class=""text-reset"">Brittany K. Williams</a>
                                                    </h6>

                                                    <p class=""text-muted mb-0"">Offline</p>
                                                </div>
                                                <div class=""media-options"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 340385, "\"", 340393, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""chx-user-3"">
                                                        <label class=""custom-control-label"" for=""chx-user-3""></label>
                                                    </div>
                                                </div>
                                            </div>
                                            <label class=""media-label"" for=""chx-user-3""></label>
                                        </li>
                                        <!-- List Group Item End -->
                                        <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""avatar avatar-busy mr-2"">
                                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1551015", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                </div>
                                                <div class=""media-body"">
                                                    <h6 class=""text-truncate""><a href=""#"" class=""text-reset"">Christina Turner</a></h6>
                                                    <p class=""text-muted mb-0"">Busy</p>
                                                </div>
                                                <div class=""media-options"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 341995, "\"", 342003, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"chx-user-4\"");
                BeginWriteAttribute("checked", " checked=\"", 342020, "\"", 342030, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                        <label class=""custom-control-label"" for=""chx-user-4""></label>
                                                    </div>
                                                </div>
                                            </div>
                                            <label class=""media-label"" for=""chx-user-4""></label>
                                        </li>
                                        <!-- List Group Item End -->
                                        <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""avatar avatar-away mr-2"">
                                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1554106", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                </div>

                                                <div class=""media-body"">
                                                    <h6 class=""text-truncate""><a href=""#"" class=""text-reset"">Annie Richardson</a></h6>
                                                    <p class=""text-muted mb-0"">Away</p>
                                                </div>
                                                <div class=""media-options"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 343618, "\"", 343626, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""chx-user-5"">
                                                        <label class=""custom-control-label"" for=""chx-user-5""></label>
                                                    </div>
                                                </div>
                                            </div>
                                            <label class=""media-label"" for=""chx-user-5""></label>
                                        </li>
                                        <!-- List Group Item End -->

                                    </ul>
                                    <!-- List Group End -->
                                </div>
                            </div>

                            <div class=""row pt-2 h-100 hide"" data-step=""3"" data-title=""Finished"">
                                <div class=""col-12"">
                                    <div class=""d-flex justify-content-center align-items-center flex-column h-100"">
                                        <div cla");
                WriteLiteral(@"ss=""btn btn-success btn-icon rounded-circle text-light mb-3"">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M5 13l4 4L19 7"" />
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/check.svg"" alt=""""> -->
                                        </div>
                                        <h6>Group Created Successfully</h6>
                                        <p class=""text-muted text-center"">Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores cumque laborum fugiat vero pariatur provident!</p>
                                 ");
                WriteLiteral(@"   </div>
                                </div>
                            </div>
                        </div>
                        <div class=""modal-footer"">
                            <button type=""button"" class=""btn btn-link text-muted js-btn-step mr-auto"" data-orientation=""cancel"" data-dismiss=""modal""></button>
                            <button type=""button"" class=""btn btn-secondary  js-btn-step"" data-orientation=""previous""></button>
                            <button type=""button"" class=""btn btn-primary js-btn-step"" data-orientation=""next""></button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal 3 :: Invite Others -->
            <div class=""modal modal-lg-fullscreen fade"" id=""inviteOthers"" tabindex=""-1"" role=""dialog"" aria-labelledby=""inviteOthersLabel"" aria-hidden=""true"">
                <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"">
                    <div class=""modal-cont");
                WriteLiteral(@"ent"">
                        <div class=""modal-header"">
                            <h5 class=""modal-title"" id=""inviteOthersLabel"">Invite Others</h5>

                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                        </div>
                        <div class=""modal-body hide-scrollbar"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1559935", async() => {
                    WriteLiteral(@"
                                <div class=""row"">
                                    <div class=""col-12"">
                                        <div class=""form-group"">
                                            <label for=""inviteEmailAddress"">Email address</label>
                                            <input type=""email"" class=""form-control form-control-md"" id=""inviteEmailAddress"" placeholder=""Type email address here""");
                    BeginWriteAttribute("value", " value=\"", 347642, "\"", 347650, 0);
                    EndWriteAttribute();
                    WriteLiteral(@">
                                        </div>
                                    </div>
                                    <div class=""col-12"">
                                        <div class=""form-group"">
                                            <label for=""inviteMessage"">Invitation message</label>
                                            <textarea class=""form-control form-control-md no-resize hide-scrollbar"" id=""inviteMessage"" placeholder=""Write your message here"" rows=""3""></textarea>
                                        </div>
                                    </div>
                                </div>
                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

                        </div>
                        <div class=""modal-footer"">
                            <button type=""button"" class=""btn btn-link text-muted"" data-dismiss=""modal"">Close</button>
                            <button type=""button"" class=""btn btn-primary"">Send Invitation</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal 4 :: Notifications -->
            <div class=""modal modal-lg-fullscreen fade"" id=""notificationModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""notificationModalLabel"" aria-hidden=""true"">
                <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"">
                    <div class=""modal-content"">
                        <div class=""modal-header"">
                            <h5 class=""modal-title"" id=""notificationModalLabel"">Notifications</h5>
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">");
                WriteLiteral(@"
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                        </div>
                        <div class=""modal-body p-0 hide-scrollbar"">
                            <div class=""row"">

                                <div class=""col-12"">
                                    <!-- List Group Start -->
                                    <ul class=""list-group list-group-flush  py-2"">

                                        <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                    ");
                WriteLiteral(@"                                    <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/user-add.svg"" alt=""""> -->
                                                </div>

                                                <div class=""media-body"">
                                                    <h6>
                                                        <a href=""#"">Catherine richardson</a> send you a friend request
                                                    </h6>

                                                    <p class=""text-muted mb-0"">5 mins ago</p>
                                                </div>
");
                WriteLiteral(@"                                            </div>
                                            <div class=""d-flex justify-content-center mt-2"">
                                                <button type=""button"" class=""btn btn-outline-danger mx-1"">Reject</button>
                                                <button type=""button"" class=""btn btn-primary mx-1"">Accept</button>
                                            </div>

                                        </li>
                                        <!-- List Group Item End -->
                                        <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg c");
                WriteLiteral(@"lass=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/check-circle.svg"" alt=""""> -->
                                                </div>

                                                <div class=""media-body"">
                                                    <h6>
                                                        <a href=""#"">Katelyn Valdez</a> accepted your friend request
                                                    </h6>

                                                    <p class=""text-muted mb-0"">25 mins ago</p>
    ");
                WriteLiteral(@"                                            </div>
                                            </div>
                                        </li>
                                        <!-- List Group Item End -->
                                        <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2");
                WriteLiteral(@"v12a2 2 0 002 2z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/photograph.svg"" alt=""""> -->
                                                </div>

                                                <div class=""media-body"">
                                                    <h6>
                                                        <a href=""#"">Eva Walker</a> updated profile picture
                                                    </h6>

                                                    <p class=""text-muted mb-0"">5 mins ago</p>
                                                </div>
                                            </div>
                                        </li>
                                        <!-- List Group Item End -->
                  ");
                WriteLiteral(@"                      <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/check-circle.svg"" alt=""""> -->
                  ");
                WriteLiteral(@"                              </div>

                                                <div class=""media-body"">
                                                    <h6>
                                                        <a href=""#"">Bonnie Torres</a> accepted your friend request
                                                    </h6>

                                                    <p class=""text-muted mb-0"">5 mins ago</p>
                                                </div>
                                            </div>
                                        </li>
                                        <!-- List Group Item End -->
                                        <!-- List Group Item Start -->
                                        <li class=""list-group-item"">
                                            <div class=""media"">
                                                <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                             ");
                WriteLiteral(@"                       <!-- Default :: Inline SVG -->
                                                    <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-24"" src=""./~/media/heroicons/outline/photograph.svg"" alt=""""> -->
                                                </div>

                                                <div class=""media-body"">
                                                    <h6>
                                                        <a ");
                WriteLiteral(@"href=""#"">Christopher Garcia</a> updated profile picture
                                                    </h6>

                                                    <p class=""text-muted mb-0"">5 mins ago</p>
                                                </div>
                                            </div>
                                        </li>
                                        <!-- List Group Item End -->

                                    </ul>
                                    <!-- List Group End -->
                                </div>
                            </div>
                        </div>
                        <div class=""modal-footer justify-content-center"">
                            <button type=""button"" class=""btn btn-link text-muted"">Clear all</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- All Modals End -->
        </div>
        <!-- Main Layout End -->
  ");
                WriteLiteral("      <!-- Javascript Files -->\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1574478", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_77);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1575584", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_78);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1576690", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_79);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1577796", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_80);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1578902", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_81);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1580008", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_82);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1581114", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_83);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1582220", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_84);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1583326", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_85);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1584432", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_86);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1585538", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_87);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1586644", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_88);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        <!--signal -->\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1587776", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_89);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d78d3d9fa6f9031e0d5aa1b464c8650c1daca1588890", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_90.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_90);
#nullable restore
#line 4190 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

        <script>
            // Scroll to end of chat
            document.querySelector('.chat-finished').scrollIntoView({
                block: 'end',               // ""start"" | ""center"" | ""end"" | ""nearest"",
                behavior: 'auto'          //""auto""  | ""instant"" | ""smooth"",
            });
        </script>

        <!--Get All Friends to Call List-->
        <script>
            $(document).ready(function () {
                let id = ");
#nullable restore
#line 4203 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                    Write(Model.AccountDetailViewModel.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
                $.ajax({
                    url: '/friends/allfriends',
                    type: ""POST"",
                    dataType: ""json"",
                    data:
                    {
                        userId: id
                    },
                    success: function (res) {
                        for (var i = 0; i < res.length; i++) {
                            let statustext = res[i].statusText;
                            let imgSrc;
                            if (res[i].profileImg == null) {
                                imgSrc = ""/uploads/default-profile-img.jpg""
                            } else {
                                imgSrc = ""https://res.cloudinary.com/djmiksiim/v1/"" + res[i].profileImg
                            }
                            if (res[i].statusText == null) {
                                statustext = """";
                            }
                            //Get Friends List
                            $(""#callLogTa");
                WriteLiteral(@"b"").append('<li class=""contacts-item"" data-account-call data-id=""' + res[i].id  +'"">' + '<a class=""contacts-link"" href=""#"">' + '<div class=""avatar"">' +
                                '<img src=""'+ imgSrc +'""/></div>' + //profile img div
                                '<div class=""contacts-content"">' +
                                '<div class=""contacts-info""><h6 class=""chat-name text-truncate"">' + res[i].name +"" ""+res[i].surname + //fullname
                                '</h6></div>' + //info div end
                                '<div class=""contacts-texts""><svg class=""hw-16 text-muted mr-1"" viewBox=""0 0 20 20"" fill=""currentColor"">' +
                                '<path d=""M17.924 2.617a.997.997 0 00-.215-.322l-.004-.004A.997.997 0 0017 2h-4a1 1 0 100 2h1.586l-3.293 3.293a1 1 0 001.414 1.414L16 5.414V7a1 1 0 102 0V3a.997.997 0 00-.076-.383z"" ></path >' +
                            '<path d=""M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.");
                WriteLiteral(@"105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z""></path>' +
                                                    '</svg ><p class=""text-muted mb-0"">'
                                + 'Call now (Get Premium)' + '</p></div > ' + // STATIC PROBLEM !!!
                                '</div></a></li>'); //end li
                        }
                    },
                    error: function (res) {
                        $.toast({
                            heading: 'Error',
                            text: ""System Error 500 ! All Friends Not Response!"",
                            icon: 'error',
                            loader: true,
                            bgColor: '#dc3545',
                            loaderBg: '#f7d40d',
                            position: 'top-right',
                            hideAfter: 6000
                        });
                    }
                });
            })
        </script>");
                WriteLiteral("\n\r\n        <!--Get All Friends to Friends List-->\r\n        <script>\r\n            $(document).ready(function () {\r\n                let id = ");
#nullable restore
#line 4257 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                    Write(Model.AccountDetailViewModel.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
                $.ajax({
                    url: '/friends/allfriends',
                    type: ""POST"",
                    dataType: ""json"",
                    data:
                    {
                        userId: id
                    },
                    success: function (res) {
                        for (var i = 0; i < res.length; i++) {
                            let statustext = res[i].statusText;
                            let imgSrc;
                            if (res[i].profileImg == null) {
                                imgSrc = ""/uploads/default-profile-img.jpg""
                            } else {
                                imgSrc = ""https://res.cloudinary.com/djmiksiim/v1/"" + res[i].profileImg
                            }
                            if (res[i].statusText == null) {
                                statustext = """";
                            }
                            //Get Friends List
                            $(""#friendsTa");
                WriteLiteral(@"b"").append('<li class=""contacts-item"" data-account-info data-id=""' + res[i].id  +'"">' + '<a class=""contacts-link"" href=""#"">' + '<div class=""avatar"">' +
                                '<img src=""'+ imgSrc +'""/></div>' + //profile img div
                                '<div class=""contacts-content"">' +
                                '<div class=""contacts-info""><h6 class=""chat-name text-truncate"">' + res[i].name +"" ""+res[i].surname + //fullname
                                '</h6></div>' + //info div end
                                '<div class=""contacts-texts""><i class=""fas fa-hashtag"" style=""font-size:12px;margin-right:4px;""></i><p class=""text-muted mb-0"">'
                                + statustext + '</p></div > ' + //status text end
                                '</div></a></li>'); //end li
                        }
                    },
                    error: function (res) {
                        $.toast({
                            heading: 'Error',
                     ");
                WriteLiteral(@"       text: ""System Error 500 ! All Friends Not Response!"",
                            icon: 'error',
                            loader: true,
                            bgColor: '#dc3545',
                            loaderBg: '#f7d40d',
                            position: 'top-right',
                            hideAfter: 6000
                        });
                    }
                });
            })
        </script>

        <!--Friendship methods-->
        <script>
            //Reject Friend Request
            if ($("".btn-reject-friend-request"").length) {
                $("".btn-reject-friend-request"").click(function (ev) {

                    let selectedAccountId = parseInt($('#hidden-selected-account-id').text());

                    if (selectedAccountId != """") {

                        $.ajax({
                            url: '/friends/rejectfriendrequest',
                            type: ""POST"",
                            dataType: ""json"",
     ");
                WriteLiteral("                       data:\r\n                            {\r\n                                currentId: ");
#nullable restore
#line 4321 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                      Write(Model.AccountDetailViewModel.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                                userId: selectedAccountId,
                            },
                            success: function (res) {
                                if (res.status) {
                                    $.toast({
                                        heading: 'Info',
                                        text: ""Friendship request has been rejected"",
                                        icon: 'info',
                                        loader: true,
                                        bgColor: '#3988ff',
                                        loaderBg: '#f7d40d',
                                        position: 'top-right',
                                        hideAfter: 7000
                                    });
                                    $("".btn-accept-friend-request"").addClass('d-none')
                                    $("".btn-reject-friend-request"").addClass('d-none')
                                    $("".btn-send-friend-requ");
                WriteLiteral(@"est"").removeClass('d-none')
                                };
                                if (res.status == false) {
                                    $.toast({
                                        heading: 'Error',
                                        text: ""Bad Request! Friendship Not Found!"",
                                        icon: 'info',
                                        loader: true,
                                        bgColor: '#dc3545',
                                        loaderBg: '#f7d40d',
                                        position: 'top-right',
                                        hideAfter: 7000
                                    });
                                };
                            }
                        });
                    }
                    else {
                        $.toast({
                            heading: 'Info',
                            text: ""System Error! Unexpected error ocoured while rejec");
                WriteLiteral(@"t friend request!"",
                            icon: 'info',
                            loader: true,
                            bgColor: '#3988ff',
                            loaderBg: '#f7d40d',
                            position: 'top-right',
                            hideAfter: 7000
                        });
                    }
                });
            };

            //Accept Friend Request
            if ($("".btn-accept-friend-request"").length) {
                $("".btn-accept-friend-request"").click(function (ev) {

                    let selectedAccountName = $('.selected-account-details-fullname').text();
                    let selectedAccountId = $('#hidden-selected-account-id').text()

                    if (selectedAccountId != """") {
                        $.ajax({
                            url: '/friends/acceptfriendrequest',
                            type: ""POST"",
                            dataType: ""json"",
                            data:
  ");
                WriteLiteral("                          {\r\n                                receiverId: ");
#nullable restore
#line 4384 "C:\Users\User\Desktop\FinalProject\Messenger\Views\Pages\Chat1.cshtml"
                                       Write(Model.AccountDetailViewModel.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                                senderId: selectedAccountId
                            },
                            success: function (res) {
                                if (res.status) {
                                    // $.toast({
                                    //    heading: 'Info',
                                    //    text: ""Friendship request has been Accepted"",
                                    //    icon: 'info',
                                    //    loader: true,
                                    //    bgColor: '#3988ff',
                                    //    loaderBg: '#f7d40d',
                                    //    position: 'top-right',
                                    //    hideAfter: 2000
                                    //});
                                    location.reload();
                                };
                                if (res.status == false) {
                                    $.toast({
               ");
                WriteLiteral(@"                         heading: 'Error',
                                        text: ""Bad Request! Friendship Not Found!"",
                                        icon: 'info',
                                        loader: true,
                                        bgColor: '#3988ff',
                                        loaderBg: '#f7d40d',
                                        position: 'top-right',
                                        hideAfter: 4000
                                    });
                                    location.reload();
                                };
                            }
                        });
                    }
                    else {
                        $.toast({
                            heading: 'Info',
                            text: ""System Error! Unexpected error ocoured while accept friend request!"",
                            icon: 'info',
                            loader: true,
                        ");
                WriteLiteral(@"    bgColor: '#3988ff',
                            loaderBg: '#f7d40d',
                            position: 'top-right',
                            hideAfter: 7000
                        });
                    }
                });
            };

        </script>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_91);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ICloudinaryService _cloudinaryService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GeneralViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
